<?xml version="1.0" encoding="UTF-8"?>
<krpano version="1.19-pr16">

    
  <!-- Spot Style - arraw -->


  <style name="Iconarraw"
         url="%FIRSTXML%/spots/arraw_user_defaultpoint0.png"
         visible="false"
         edge="center"
         onhover="onhoverIconarraw"
         onout="onoutIconarraw"

         height="50"
         width="50"
         />
  <action name="onhoverIconarraw">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconarraw">
    hideTooltip();



  </action>



  <!-- unsupported kind of display : PointMap -->


    
  <!-- Spot Style - left -->


  <style name="Iconleft"
         url="%FIRSTXML%/spots/left_user_defaultpoint1.png"
         visible="false"
         edge="center"
         onhover="onhoverIconleft"
         onout="onoutIconleft"

         height="50"
         width="50"
         />
  <action name="onhoverIconleft">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconleft">
    hideTooltip();



  </action>



    
  <!-- Spot Style - right -->


  <style name="Iconright"
         url="%FIRSTXML%/spots/rightt_user_defaultpoint2.png"
         visible="false"
         edge="center"
         onhover="onhoverIconright"
         onout="onoutIconright"

         height="50"
         width="50"
         />
  <action name="onhoverIconright">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconright">
    hideTooltip();



  </action>



    
  <!-- Spot Style - spot_2 -->


  <style name="Iconspot_2"
         url="%FIRSTXML%/spots/lupa_spot_user_defaultpoint3.png"
         visible="false"
         edge="center"
         onhover="onhoverIconspot_2"
         onout="onoutIconspot_2"

         height="28"
         width="28"
         />
  <action name="onhoverIconspot_2">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconspot_2">
    hideTooltip();



  </action>



    
  <!-- Spot Style - spot_20 -->


  <style name="Iconspot_20"
         url="%FIRSTXML%/spots/lupa_spot_user_defaultpoint4.png"
         visible="false"
         edge="center"
         onhover="onhoverIconspot_20"
         onout="onoutIconspot_20"

         height="28"
         width="28"
         />
  <action name="onhoverIconspot_20">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconspot_20">
    hideTooltip();



  </action>



    
  <!-- Spot Style - spot_21 -->


  <style name="Iconspot_21"
         url="%FIRSTXML%/spots/lupa_spot_user_defaultpoint5.png"
         visible="false"
         edge="center"
         onhover="onhoverIconspot_21"
         onout="onoutIconspot_21"

         height="28"
         width="28"
         />
  <action name="onhoverIconspot_21">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconspot_21">
    hideTooltip();



  </action>



    
  <!-- Spot Style - spot_19 -->


  <style name="Iconspot_19"
         url="%FIRSTXML%/spots/lupa_spot_user_defaultpoint6.png"
         visible="false"
         edge="center"
         onhover="onhoverIconspot_19"
         onout="onoutIconspot_19"

         height="28"
         width="28"
         />
  <action name="onhoverIconspot_19">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconspot_19">
    hideTooltip();



  </action>



    
  <!-- Spot Style - spot_23 -->


  <style name="Iconspot_23"
         url="%FIRSTXML%/spots/lupa_spot_user_defaultpoint7.png"
         visible="false"
         edge="center"
         onhover="onhoverIconspot_23"
         onout="onoutIconspot_23"

         height="28"
         width="28"
         />
  <action name="onhoverIconspot_23">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconspot_23">
    hideTooltip();



  </action>



    
  <!-- Spot Style - spot_9 -->


  <style name="Iconspot_9"
         url="%FIRSTXML%/spots/lupa_spot_user_defaultpoint8.png"
         visible="false"
         edge="center"
         onhover="onhoverIconspot_9"
         onout="onoutIconspot_9"

         height="28"
         width="28"
         />
  <action name="onhoverIconspot_9">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconspot_9">
    hideTooltip();



  </action>



    
  <!-- Spot Style - spot_24 -->


  <style name="Iconspot_24"
         url="%FIRSTXML%/spots/lupa_spot_user_defaultpoint12.png"
         visible="false"
         edge="center"
         onhover="onhoverIconspot_24"
         onout="onoutIconspot_24"

         height="28"
         width="28"
         />
  <action name="onhoverIconspot_24">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconspot_24">
    hideTooltip();



  </action>



    
  <!-- Spot Style - spot_25 -->


  <style name="Iconspot_25"
         url="%FIRSTXML%/spots/lupa_spot_user_defaultpoint13.png"
         visible="false"
         edge="center"
         onhover="onhoverIconspot_25"
         onout="onoutIconspot_25"

         height="28"
         width="28"
         />
  <action name="onhoverIconspot_25">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconspot_25">
    hideTooltip();



  </action>



    
  <!-- Spot Style - spot_26 -->


  <style name="Iconspot_26"
         url="%FIRSTXML%/spots/lupa_spot_user_defaultpoint14.png"
         visible="false"
         edge="center"
         onhover="onhoverIconspot_26"
         onout="onoutIconspot_26"

         height="28"
         width="28"
         />
  <action name="onhoverIconspot_26">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconspot_26">
    hideTooltip();



  </action>



    
  <!-- Spot Style - spot_27 -->


  <style name="Iconspot_27"
         url="%FIRSTXML%/spots/lupa_spot_user_defaultpoint15.png"
         visible="false"
         edge="center"
         onhover="onhoverIconspot_27"
         onout="onoutIconspot_27"

         height="28"
         width="28"
         />
  <action name="onhoverIconspot_27">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconspot_27">
    hideTooltip();



  </action>



    
  <!-- Spot Style - spot_28 -->


  <style name="Iconspot_28"
         url="%FIRSTXML%/spots/lupa_spot_user_defaultpoint16.png"
         visible="false"
         edge="center"
         onhover="onhoverIconspot_28"
         onout="onoutIconspot_28"

         height="28"
         width="28"
         />
  <action name="onhoverIconspot_28">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconspot_28">
    hideTooltip();



  </action>



    
  <!-- Spot Style - spot_29_PDF -->


  <style name="Iconspot_29_PDF"
         url="%FIRSTXML%/spots/lupa_spot_user_defaultpoint17.png"
         visible="false"
         edge="center"
         onhover="onhoverIconspot_29_PDF"
         onout="onoutIconspot_29_PDF"

         height="28"
         width="28"
         />
  <action name="onhoverIconspot_29_PDF">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconspot_29_PDF">
    hideTooltip();



  </action>



    
  <!-- Spot Style - spot_29 -->


  <style name="Iconspot_29"
         url="%FIRSTXML%/spots/lupa_spot_user_defaultpoint18.png"
         visible="false"
         edge="center"
         onhover="onhoverIconspot_29"
         onout="onoutIconspot_29"

         height="28"
         width="28"
         />
  <action name="onhoverIconspot_29">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconspot_29">
    hideTooltip();



  </action>



    
  <!-- Spot Style - text_spot -->


  <style name="Icontext_spot"
         url="%FIRSTXML%/spots/lupa_spot_user_defaultpoint19.png"
         visible="false"
         edge="center"
         onhover="onhoverIcontext_spot"
         onout="onoutIcontext_spot"

         height="28"
         width="28"
         />
  <action name="onhoverIcontext_spot">
    showtooltip('hotspot');
  </action>
  <action name="onoutIcontext_spot">
    hideTooltip();



  </action>


<include url="%FIRSTXML%/graphics/alpo.start.screen_v1.0.6/start_screen.xml"/><events name="start_screen_event" keep="true"    onloadcomplete="hide_screen(auto);"  /> 
<!-- ********** -->
<!-- Double Click -->
<!-- id : doubleclick -->
<!-- ********** -->
  <events name="doubleclick_events" keep="true" ondoubleclick="doubleclick_ondoubleclick"/>
  <action name="doubleclick_ondoubleclick">switchFullscreen();


  </action>
<!-- ********** -->
<!-- Floor plan -->
<!-- id : floorPlan -->
<!-- ********** -->

	<ptplugin name="floorPlan" engine="KolorFloorPlan">
		<settings>
			<option name="background_color" value="ffffff" type="string" />
			<option name="background_lighter_color" value="ffffff" type="string" />
			<option name="background_darker_color" value="d5d5d5" type="string" />
			<option name="background_alpha" value="1" type="float" />
			<option name="text_color" value="000000" type="string" />

			<option name="resize" value="true" type="bool" />
			<option name="fp_selector" value="one" type="string" />
			<option name="fp_selector_label" value="floorPlanmenu_label" type="string" />
			<option name="display_title" value="true" type="bool" />
			<option name="title" value="project_floor_title" type="string" />
			<option name="title_font" value="Verdana" type="string" />
			<option name="title_size" value="16" type="int" />
			<option name="title_weight" value="bold" type="string" />
			<option name="title_decoration" value="normal" type="string" />
			<option name="title_color" value="080808" type="string" />
			<option name="display_orientation" value="false" type="bool" />
			<option name="display_radar" value="true" type="bool" />
			<option name="radar_radius" value="50" type="int" />
			<option name="radar_line_width" value="1" type="int" />
			<option name="radar_line_color" value="000000" type="string" />
			<option name="radar_line_alpha" value="1" type="float" />
			<option name="radar_fill_color" value="ffffff" type="string" />
			<option name="radar_fill_alpha" value="0.30000762951094834" type="float" />
			<option name="close_on_click" value="false" type="bool" />
			<option name="position" value="center" type="string" />
			<option name="zorder" value="3" type="int" />
			<option name="use_i18n" value="true" type="bool" />
		</settings>
		
		<floorplanItems selectedItem="fpitemmain" selectedSpot="" selectedSpotScene="" selectedSpotHeading="" selectedSpotFov="">
				
				<floorplanItem 
					name="fpitemmain" 
					width="1000" 
					height="471" 
					groupName="" 
					url="floorplan/map_floor_master_nomber2.png" 
					title="project_floor_title"
					heading="0">
							<spot name="spotmap71" posX="0.923529029" posY="0.612500012" heading="9.4000000000000341" desc="spotmap71_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano44" jsClick="spotmap71ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap72" posX="0.897647023" posY="0.219999999" heading="80.200000000000671" desc="spotmap72_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano12" jsClick="spotmap72ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap73" posX="0.771764994" posY="0.289999992" heading="-124.39999999999991" desc="spotmap73_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano14" jsClick="spotmap73ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap74" posX="0.210587993" posY="0.419999987" heading="-78.400000000000006" desc="spotmap74_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano16" jsClick="spotmap74ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap75" posX="0.397646993" posY="0.682500005" heading="103.2000000000002" desc="spotmap75_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano18" jsClick="spotmap75ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap76" posX="0.31647101" posY="0.857500017" heading="155.60000000000031" desc="spotmap76_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano20" jsClick="spotmap76ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap77" posX="0.61529398" posY="0.657500029" heading="160.39999999999981" desc="spotmap77_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano22" jsClick="spotmap77ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap78" posX="0.794117987" posY="0.592499971" heading="177.39999999999989" desc="spotmap78_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano45" jsClick="spotmap78ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap348" posX="0.656623006" posY="0.383377999" heading="0" desc="spotmap348_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano326" jsClick="spotmap348ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap349" posX="0.564971983" posY="0.384719014" heading="97.400000000000148" desc="spotmap349_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano325" jsClick="spotmap349ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap350" posX="0.467043012" posY="0.369973004" heading="17.599999999999969" desc="spotmap350_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano324" jsClick="spotmap350ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap351" posX="0.374765009" posY="0.351206005" heading="162" desc="spotmap351_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano323" jsClick="spotmap351ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap352" posX="0.285881996" posY="0.222499996" heading="140.2000000000001" desc="spotmap352_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano327" jsClick="spotmap352ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap520" posX="0.164706007" posY="0.242500007" heading="0" desc="spotmap520_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano496" jsClick="spotmap520ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap521" posX="0.0788234994" posY="0.132499993" heading="0" desc="spotmap521_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano497" jsClick="spotmap521ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap522" posX="0.142352998" posY="0.38499999" heading="0" desc="spotmap522_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano498" jsClick="spotmap522ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap523" posX="0.0470587984" posY="0.507499993" heading="14.99999999999992" desc="spotmap523_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano499" jsClick="spotmap523ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap524" posX="0.132940993" posY="0.542500019" heading="-32.39999999999992" desc="spotmap524_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano500" jsClick="spotmap524ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap639" posX="0.365882009" posY="0.172499999" heading="-45.199999999999989" desc="spotmap639_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano636" jsClick="spotmap639ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap644" posX="0.505882025" posY="0.157499999" heading="-66.200000000000003" desc="spotmap644_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano640" jsClick="spotmap644ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap654" posX="0.603528976" posY="0.174999997" heading="-158.19999999999999" desc="spotmap654_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano646" jsClick="spotmap654ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
							<spot name="spotmap655" posX="0.677646995" posY="0.172499999" heading="56.399999999999949" desc="spotmap655_tooltip" descType="tooltip" groupName="" isScene="true" planar="false" scene="pano645" jsClick="spotmap655ActionSpotFloorPlan">
								<icon url="spots/spot_red_user_black_user_defaultmap0.png" iconWidth="15" iconHeight="15" iconAnchor="center" />
							</spot>
				</floorplanItem>
			
			
		</floorplanItems>
	</ptplugin>
	
	<action name="kolorFloorplanJsReady_floorPlan">
		set(ptplugin[floorPlan].jsready, true);
		
		ifnot(ptplugin[floorPlan].floorplanItems.selectedSpot == "",
			set(ptplugin[floorPlan].floorplanItems.selectedSpotFov, get(view.hfov));
			js(invokePluginFunction(floorPlan, setKolorFloorPlanSelectedSpotOptions, get(xml.scene), get(view.hlookat), get(view.hfov)));
		);
	</action>
	
	
		<!-- floorplan main spots counter : 22 -->
			<action name="spotmap71ActionSpotFloorPlan">if(xml.scene == pano44,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano44);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap72ActionSpotFloorPlan">if(xml.scene == pano12,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano12);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap73ActionSpotFloorPlan">if(xml.scene == pano14,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano14);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap74ActionSpotFloorPlan">if(xml.scene == pano16,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano16);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap75ActionSpotFloorPlan">if(xml.scene == pano18,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano18);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap76ActionSpotFloorPlan">if(xml.scene == pano20,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano20);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap77ActionSpotFloorPlan">if(xml.scene == pano22,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano22);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap78ActionSpotFloorPlan">if(xml.scene == pano45,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano45);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap348ActionSpotFloorPlan">if(xml.scene == pano326,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano326);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap349ActionSpotFloorPlan">if(xml.scene == pano325,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano325);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap350ActionSpotFloorPlan">if(xml.scene == pano324,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano324);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap351ActionSpotFloorPlan">if(xml.scene == pano323,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano323);lookat(39.037000, -0.148148, 88.000000);

</action>
			<action name="spotmap352ActionSpotFloorPlan">if(xml.scene == pano327,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano327);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap520ActionSpotFloorPlan">if(xml.scene == pano496,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano496);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap521ActionSpotFloorPlan">if(xml.scene == pano497,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano497);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap522ActionSpotFloorPlan">if(xml.scene == pano498,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano498);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap523ActionSpotFloorPlan">if(xml.scene == pano499,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano499);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap524ActionSpotFloorPlan">if(xml.scene == pano500,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano500);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap639ActionSpotFloorPlan">if(xml.scene == pano636,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano636);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap644ActionSpotFloorPlan">if(xml.scene == pano640,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano640);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap654ActionSpotFloorPlan">if(xml.scene == pano646,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano646);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
			<action name="spotmap655ActionSpotFloorPlan">if(xml.scene == pano645,if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
floorPlanActivateDefaultSpot();););
          mainloadscene(pano645);lookat(get(panoview.h), get(panoview.v), get(panoview.fov));

</action>
	
	
	
	<events name="floorPlanEvents" 
	onxmlcomplete="ifnot(floorPlanFloorPlanLoaded,set(tour_displayfloorplan,true););floorPlanActivateDefaultSpot();" 
	onviewchanged="floorPlanOnViewChange();" 
	onhidetourfloorplan="floorPlanCloseTourFloorPlan();" 
	onshowtourfloorplan="if(tour_displayfloorplan,floorPlanOpenTourFloorPlan(););" 
	onTourStart="set(loadedState_floorPlanArea, get(tour_displaycontrols));floorPlanOpenTourFloorPlan();"
	changetourlanguage="floorPlanChangeLanguage();"
	keep="true" />
	
	<action name="floorPlanChangeLanguage">
		if(ptplugin[floorPlan].jsready,
			stopdelayedcall(delay_floorPlan);
			js(invokePluginFunction(floorPlanArea, changeLanguage, false));
			js(invokePluginFunction(floorPlan, changeLanguage));
		,
			delayedcall(delay_floorPlan, 0.1, floorPlanChangeLanguage(););
		);
	</action>
	
	
	<krpano floorPlanFloorPlanLoaded="false" />
	
	<action name="floorPlanHideTourFloorPlan">
		hideKolorArea_floorPlanArea(false);
	</action>
	
	<action name="floorPlanCloseTourFloorPlan">
		closeKolorArea_floorPlanArea();
	</action>
	
	<action name="floorPlanShowTourFloorPlan">
		if(ptplugin[floorPlanArea].isOpen === null,
			openKolorArea_floorPlanArea();
		,
			showKolorArea_floorPlanArea(false);
		);
	</action>
	
	<action name="floorPlanOpenTourFloorPlan">
		openKolorArea_floorPlanArea();
	</action>
	
	<action name="floorPlanOnViewChange">
		if (floorPlanFloorPlanLoaded == true,
			ifnot(ptplugin[floorPlan].floorplanItems.selectedSpot == "",
				ifnot(scene[get(xml.scene)].planar,
					js(invokePluginFunction(floorPlan, changeDirection, get(xml.scene), get(view.hlookat), get(view.hfov)));
				);
			);
		);
	</action>
	
	<action name="floorPlanActivateSpot">
		
		set(ptplugin[floorPlan].floorplanItems.selectedSpot, %1);
		set(ptplugin[floorPlan].floorplanItems.selectedItem, %2);
		
		if(%1 !== "",
			set(ptplugin[floorPlan].floorplanItems.selectedSpotScene, get(xml.scene));
			set(ptplugin[floorPlan].floorplanItems.selectedSpotHeading, get(view.hlookat));
			set(ptplugin[floorPlan].floorplanItems.selectedSpotFov, get(view.hfov));
		);
		
		
		if(ptplugin[floorPlanArea].isOpen,
			floorPlanSelectActivatedSpot(%1, %2, %3);
		);
	</action>
	
	<action name="floorPlanSelectActivatedSpot">
		js(invokePluginFunction(floorPlan, selectSpot, %1, %2, %3));

		if(%1 !== "",
			if(scene[get(xml.scene)].planar,
				js(invokePluginFunction(floorPlan, hideRadar));
			,
				js(invokePluginFunction(floorPlan, changeDirection, get(xml.scene), get(view.hlookat), get(view.hfov)));
			);
		);
	</action>
	
	<action name="floorPlanDeactivateSpot">
		set(ptplugin[floorPlan].floorplanItems.selectedSpot, "");
		
		js(invokePluginFunction(floorPlan, unselectSpot));
	</action>
	
	<action name="floorPlanActivateDefaultSpot">
		set(floorPlanFloorPlanLoaded, true);
		
		set(floorPlanSpotFound, "");
		set(floorPlanSpotScene, "");
		set(floorPlanItemFound, "");
		set(floorPlanItemSearch, true);
		set(floorPlanSpotSearchActivated, true);
		set(floorPlanSpotSearchContinue, true);
		
		
		for(set(defaultfloorplaniteminc,0), defaultfloorplaniteminc LT ptplugin[floorPlan].floorplanItems.floorplanItem.count , inc(defaultfloorplaniteminc),
                        if(floorPlanSpotSearchActivated == true,
				
				if(ptplugin[floorPlan].floorplanItems.floorplanItem[get(defaultfloorplaniteminc)].groupName == scene[get(xml.scene)].group,
					set(floorPlanItemFound, get(ptplugin[floorPlan].floorplanItems.floorplanItem[get(defaultfloorplaniteminc)].name));
					set(ptplugin[floorPlan].floorplanItems.selectedItem, get(ptplugin[floorPlan].floorplanItems.floorplanItem[get(defaultfloorplaniteminc)].name));
					set(floorPlanItemSearch, false);
				,
					
					if(floorPlanItemFound == "",
						set(floorPlanItemFound, get(ptplugin[floorPlan].floorplanItems.floorplanItem[fpitemmain].name));
						set(ptplugin[floorPlan].floorplanItems.selectedItem, get(ptplugin[floorPlan].floorplanItems.floorplanItem[fpitemmain].name));
					);
				);
			);
			if(floorPlanSpotSearchActivated == true,
                                for(set(defaultspotinc,0), defaultspotinc LT ptplugin[floorPlan].floorplanItems.floorplanItem[get(defaultfloorplaniteminc)].spot.count , inc(defaultspotinc),
                                        if(ptplugin[floorPlan].floorplanItems.floorplanItem[get(defaultfloorplaniteminc)].spot[get(defaultspotinc)].isScene == true,
					
						if(floorPlanSpotSearchContinue == true,
							if(ptplugin[floorPlan].floorplanItems.floorplanItem[get(defaultfloorplaniteminc)].spot[get(defaultspotinc)].scene == xml.scene,
								set(floorPlanSpotFound, get(ptplugin[floorPlan].floorplanItems.floorplanItem[get(defaultfloorplaniteminc)].spot[get(defaultspotinc)].name));
								set(floorPlanSpotScene, get(ptplugin[floorPlan].floorplanItems.floorplanItem[get(defaultfloorplaniteminc)].spot[get(defaultspotinc)].scene));
								set(ptplugin[floorPlan].floorplanItems.selectedItem, get(ptplugin[floorPlan].floorplanItems.floorplanItem[get(defaultfloorplaniteminc)].name));
								if(floorPlanItemSearch == false,
									set(floorPlanSpotSearchContinue, false);
									set(floorPlanSpotSearchActivated, false);
								);
							);
						);
					);
					
				);
			);
		);
		
		if(floorPlanSpotFound == "",
			
			
			floorPlanDeactivateSpot();
			
			
			set(ptplugin[floorPlan].floorplanItems.selectedItem, get(floorPlanItemFound));
			
			
			ifnot(ptplugin[floorPlan].floorplanItems.selectedItem == "",
				floorPlanActivateSpot("", get(ptplugin[floorPlan].floorplanItems.selectedItem), "");
			);
		,
			
			floorPlanActivateSpot(get(floorPlanSpotFound), get(ptplugin[floorPlan].floorplanItems.selectedItem), get(floorPlanSpotScene));
		);
	</action>
	
	<action name="floorPlanChangeTitle">
		js(invokePluginFunction(floorPlan, changeTitle, %1));
	</action>
	
	<ptplugin name="floorPlanArea" engine="kolorArea">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="start_position" value="left" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="display_title" value="true" type="bool" />
		<option name="title" value="project_floor_title" type="string" />
		<option name="title_font" value="Verdana" type="string" />
		<option name="title_size" value="16" type="int" />
		<option name="title_weight" value="bold" type="string" />
		<option name="title_decoration" value="normal" type="string" />
		<option name="title_color" value="080808" type="string" />
		<option name="close_displayed" value="true" type="bool" />
		<option name="close_text" value="floorPlandisplay_close_text" type="string" />

		<option name="background_color" value="ffffff" type="string" />
		<option name="background_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="padding" value="0" type="int" />
		<option name="topleft_radius" value="0" type="int" />
		<option name="topright_radius" value="0" type="int" />
		<option name="bottomleft_radius" value="0" type="int" />
		<option name="bottomright_radius" value="0" type="int" />
		<option name="area_border_width" value="6" type="int" />
		<option name="area_border_color" value="ffffff" type="string" />
		<option name="area_border_alpha" value="1" type="float" />
		<option name="area_width" value="1000" type="int" />
		<option name="area_height" value="508" type="int" />
		<option name="area_width_unit" value="pixel" type="string" />
		<option name="area_height_unit" value="pixel" type="string" />
		<option name="animation" value="false" type="bool" />
		<option name="animation_duration" value="500" type="int" />
		<option name="close_on_click" value="false" type="bool" />
		<option name="refresh_content" value="false" type="bool" />
		<option name="open_callback" value="addKolorFloorPlan('floorPlan', 'floorPlanArea_floorplanDIV');" type="string" />
		<option name="close_callback" value="invokeKrFunction('closeKolorAreaCallback_floorPlanArea')" type="string" />
		<option name="zorder" value="3" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	</ptplugin>
	
	<action name="kolorAreaJsReady_floorPlanArea">
		set(ptplugin[floorPlanArea].jsready, true);

		inc(tour_autorotation_openatstartplugin);
		set(ptplugin[floorPlanArea].autorotateBlocked, true);

	</action>
	
	<action name="openKolorArea_floorPlanArea">
		ifnot(ptplugin[floorPlanArea].isOpen,
			set(ptplugin[floorPlanArea].isOpen, true);
			pauseautorotation(forceplugin);

			js(showKolorArea(floorPlanArea, &lt;div id="floorPlanArea_floorplanDIV"&gt;&lt;/div&gt;));
			
			if(ptplugin[floorPlan].floorplanItems.selectedSpot != "",
				floorPlanSelectActivatedSpot(get(ptplugin[floorPlan].floorplanItems.selectedSpot), get(ptplugin[floorPlan].floorplanItems.selectedItem), get(ptplugin[floorPlan].floorplanItems.selectedSpotScene));
			);
			events.dispatch(onremovedisplayedobject);
		);
	</action>
	
	<action name="closeKolorArea_floorPlanArea">
		if(ptplugin[floorPlanArea].isOpen,
			js(invokePluginFunction(floorPlanArea, closeKolorArea));
		);
	</action>
	
	<action name="toggleKolorArea_floorPlanArea">
		if(ptplugin[floorPlanArea].isOpen,
			closeKolorArea_floorPlanArea();
		,
			openKolorArea_floorPlanArea();
		);
	</action>
	
	<action name="closeKolorAreaCallback_floorPlanArea">
		if(ptplugin[floorPlanArea].isOpen,resumeautorotation(forceplugin);

			if(ptplugin[floorPlanArea].autorotateBlocked,if(tour_autorotation_openatstartplugin GT 0,dec(tour_autorotation_openatstartplugin);set(ptplugin[floorPlanArea].autorotateBlocked,false);););
		);
		set(ptplugin[floorPlanArea].isOpen, false);hideFloorplan();

	</action>
	
	<action name="changeTitleKolorArea_floorPlanArea">
		js(invokePluginFunction(floorPlanArea, changeTitle, %1));
	</action>
	
	<action name="showKolorArea_floorPlanArea">
		set(ptplugin[floorPlanArea].isOpen, true);
		pauseautorotation(forceplugin);

		js(invokePluginFunction(floorPlanArea, showKolorArea, %1));
		events.dispatch(onremovedisplayedobject);
	</action>
		
	<action name="hideKolorArea_floorPlanArea">
		resumeautorotation(forceplugin);

		if(ptplugin[floorPlanArea].autorotateBlocked,if(tour_autorotation_openatstartplugin GT 0,dec(tour_autorotation_openatstartplugin);set(ptplugin[floorPlanArea].autorotateBlocked,false);););
		set(ptplugin[floorPlanArea].isOpen, false);
		js(invokePluginFunction(floorPlanArea, hideKolorArea, %1));
	</action>
	
	<events name="kolorAreaEvents_floorPlanArea" 
		keep="true"
		hidetourcontrols="if(loadedState_floorPlanArea,if(ptplugin[floorPlanArea].isOpen,set(restore_floorPlanArea, true);hideKolorArea_floorPlanArea(false);,set(restore_floorPlanArea, false);););"
		showtourcontrols="if(tour_displayfloorplan,if(restore_floorPlanArea,showKolorArea_floorPlanArea(false);););set(loadedState_floorPlanArea, get(tour_displaycontrols));"
		onremovepano="if(ptplugin[floorPlanArea].isOpen,hideFloorplan();
);"
	/>
	

<!-- ********** -->
<!-- Simple Thumbnails Bar -->
<!-- id : thumbnailsBar -->
<!-- ********** -->







<layer name="thumbnailsBar_thumbnailsBar"
	keep="true"
	type="container"
	visible="false"
	align="right"

		width="0"
		height="100%"
		accuracy="1"

	x="0"
	y="0"

	bgcolor="0xffffff"
	bgalpha="1"

	zorder="4"
/>



<layer name="thumbnailBorderSource_thumbnailsBar"
	keep="true"
	visible="false"

	borderWidth="5"
	borderColorDefault="0xffffff" 
	borderColorHover="0xffffff"
	borderColorSelected="0x000000"
	borderAlphaDefault="1" 
	borderAlphaHover="1"
	borderAlphaSelected="1"

	url=""
	offsetX="0"
	offsetY="0"
	quarterHeight="0"
/>


<layer name="seenCheckMarkSource_thumbnailsBar"
       url="%FIRSTXML%/graphics/thumbnailsbar/galka.png" 
       keep="true" visible="false" />



	
	<krpano arrow1Loaded_thumbnailsBar="false" arrow2Loaded_thumbnailsBar="false" borderLoaded_thumbnailsBar="false" thumbnailsLoadedCounter_thumbnailsBar="0" thumbsCount_thumbnailsBar="0" thumbsCounter_thumbnailsBar="0" firstInit_thumbnailsBar="false" />
	
	
	<events name="thumbnailsScrollEvents_thumbnailsBar" 
		keep="true" 
		
		onxmlcomplete="ifnot(startResize_thumbnailsBar,set(isLoaded_thumbnailsBar, true);if(isStarted_thumbnailsBar,onLoadCompleteHandler_thumbnailsBar();););"
		onTourStart="set(isStarted_thumbnailsBar, true);if(isLoaded_thumbnailsBar,onLoadCompleteHandler_thumbnailsBar(););"
		onnewpano="if(startResize_thumbnailsBar,if(firstInit_thumbnailsBar,onLoadCompleteHandler_thumbnailsBar();););"
		onresize="onResizeHandler_thumbnailsBar();"
		hidetourthumbnails="hideWithThumbnailsButton_thumbnailsBar();" 
		showtourthumbnails="showWithThumbnailsButton_thumbnailsBar();" 
		hidetourcontrols="hideWithControlsBar_thumbnailsBar();" 
		showtourcontrols="showWithControlsBar_thumbnailsBar();" 
		onenterfullscreen="delayedcall(0.2,scrollToCurrentThumb_thumbnailsBar(););"
		onexitfullscreen="delayedcall(0.2,scrollToCurrentThumb_thumbnailsBar(););"
    changetourlanguage="updateTitles_thumbnailsBar();"	
	/>
	
	
	<layer name="scrollAreaContainer_thumbnailsBar" 
         keep="true"
         type="container" 
         align="topleft" x="10" y="10"
         marginX="10"
         marginY="10"
         width="0" height="0"
         targetWidth="0"
         targetHeight="0"
         scrollSpeedInit="10"
         scrollSpeed="10"
         scrollSpeedMax="70"
         scrollSpeedAcceleration="20"
         parent="thumbnailsBar_thumbnailsBar"
         thumbWidth="0"
         thumbHeight="0"
         itemWidth="150"
         itemHeight="75"
         offsetX="0" offsetY="0"
         thumbSpacer="10"
         currentThumbsCount="0"
         adjustToContent="false"
         zorder="1"
         visible="false"
         ready="false">
	
		
    <layer name="thumbsScrollArea_thumbnailsBar"
           url.flash="%FIRSTXML%/graphics/scrollarea.swf"
           url.html5="%FIRSTXML%/graphics/scrollarea.js"
           align="right" x="0" y="0"
           onhover_autoscrolling="false"
           direction="v"/>
	
	</layer>
	
	
	<layer name="scrollPrevArrow_thumbnailsBar" 
         keep="true"
         type="image"
         visible="false"
         parent="thumbnailsBar_thumbnailsBar"
         targetHeight="0"
         targetWidth="0"
         zorder="2"
         onloaded="loadedImages_thumbnailsBar(arrow1);"
         url="%FIRSTXML%/graphics/thumbnailsbar/btn_scroll_up.png"
         align="top"
	/>
	
	
	<layer name="scrollNextArrow_thumbnailsBar" 
         keep="true"
         type="image"
         visible="false"
         parent="thumbnailsBar_thumbnailsBar"
         targetHeight="0"
         targetWidth="0"
         zorder="2"
         onloaded="loadedImages_thumbnailsBar(arrow2);"
         url="%FIRSTXML%/graphics/thumbnailsbar/btn_scroll_down.png"
         align="bottom"
	/>
	
	<action name="loadedImages_thumbnailsBar">
		if(%1 == "arrow1",
			set(arrow1Loaded_thumbnailsBar, true);
		);
		if(%1 == "arrow2",
			set(arrow2Loaded_thumbnailsBar, true);
		);
		if(%1 == "border",
			if(layer[thumbnailBorderSource_thumbnailsBar].url,
				set(borderLoaded_thumbnailsBar, true);
			);
		);
		if(%1 == "thumbnail",
			inc(thumbnailsLoadedCounter_thumbnailsBar);
		);
	</action>
	
	<action name="onLoadCompleteHandler_thumbnailsBar">
		
		set(thumbsCount_thumbnailsBar, 0);
		
		
		set(thumbsCount_thumbnailsBar, get(scene.count));
		
		
		
		
		
		
		
		loadThumbs_thumbnailsBar();
		
		if(firstInit_thumbnailsBar,
			onLoadCompleteHandlerPartThree_thumbnailsBar();
		,
			onLoadCompleteHandlerPartTwo_thumbnailsBar();
		);
	</action>
	
	<action name="onLoadCompleteHandlerPartTwo_thumbnailsBar">
		set(imgCounter_thumbnailsBar, 3);
		
		if(arrow1Loaded_thumbnailsBar,
			dec(imgCounter_thumbnailsBar);
		);
		if(arrow2Loaded_thumbnailsBar,
			dec(imgCounter_thumbnailsBar);
		);
		if(thumbsCount_thumbnailsBar == thumbnailsLoadedCounter_thumbnailsBar,
			dec(imgCounter_thumbnailsBar);
		);
		
		if(imgCounter_thumbnailsBar LE 0,
			stopdelayedcall(delayedCallOnLoadComplete_thumbnailsBar);
			onLoadCompleteHandlerPartThree_thumbnailsBar();
		,
			delayedcall(delayedCallOnLoadComplete_thumbnailsBar, 0.2, onLoadCompleteHandlerPartTwo_thumbnailsBar());
		);
	</action>
	
	<action name="onLoadCompleteHandlerPartThree_thumbnailsBar">
		resetMouseBehavior_thumbnailsBar();
		highlightCurrentThumb_thumbnailsBar();
		
		
		if(layer[scrollAreaContainer_thumbnailsBar].adjustToContent,
			mul(adjustWidth_thumbnailsBar, get(layer[scrollAreaContainer_thumbnailsBar].marginX), 2);
			add(adjustWidth_thumbnailsBar, get(layer[thumbsScrollArea_thumbnailsBar].width));
			mul(adjustHeight_thumbnailsBar, get(layer[scrollAreaContainer_thumbnailsBar].marginY), 2);
			add(adjustHeight_thumbnailsBar, get(layer[thumbsScrollArea_thumbnailsBar].height));
			
			
			if(adjustWidth_thumbnailsBar GT stagewidth,
				set(adjustWidth_thumbnailsBar, get(stagewidth));
				set(layer[scrollAreaContainer_thumbnailsBar].adjustToContent, false);
			,
				if(adjustHeight_thumbnailsBar GT stageheight,
					set(adjustHeight_thumbnailsBar, get(stageheight));
					set(layer[scrollAreaContainer_thumbnailsBar].adjustToContent, false);
				);
			);
			
			setSize_thumbnailsBar(get(adjustWidth_thumbnailsBar), get(adjustHeight_thumbnailsBar));
		);
		
		setupArrows_thumbnailsBar(true);
		
		
		if (thumbsCounter_thumbnailsBar LE 0,
			set(layer[thumbnailsBar_thumbnailsBar].visible, false);
		);
		
		
		set(startResize_thumbnailsBar, true);
		set(firstInit_thumbnailsBar, true);
	</action>
	
	
	<action name="onResizeHandler_thumbnailsBar">
		
		delayedcall(0.1, onResizeCallback_thumbnailsBar(false); );
	</action>
	
	
	<action name="onResizeCallback_thumbnailsBar">
		if(startResize_thumbnailsBar,
			setSize_thumbnailsBar(get(layer[scrollAreaContainer_thumbnailsBar].targetWidth), get(layer[scrollAreaContainer_thumbnailsBar].targetHeight));
			setupArrows_thumbnailsBar(%1);
			
			
			if (thumbsCounter_thumbnailsBar LE 0,
				set(layer[thumbnailsBar_thumbnailsBar].visible, false);
			);
		);
	</action>
	
	
		<action name="showWithThumbnailsButton_thumbnailsBar">
			set(layer[thumbnailsBar_thumbnailsBar].visible, true);
			onResizeCallback_thumbnailsBar(true);
		</action>
		
		<action name="hideWithThumbnailsButton_thumbnailsBar">
			set(layer[thumbnailsBar_thumbnailsBar].visible, false);
		</action>
	
	
		<action name="showWithControlsBar_thumbnailsBar">
			
				if (tour_displaythumbnails,
					set(layer[thumbnailsBar_thumbnailsBar].visible, true);
					onResizeCallback_thumbnailsBar(true);
				,
					set(layer[thumbnailsBar_thumbnailsBar].visible, false);
				);
		</action>
		
		<action name="hideWithControlsBar_thumbnailsBar">
			set(layer[thumbnailsBar_thumbnailsBar].visible, false);
		</action>
	
	
	<action name="thumbnailBorderDrawInit_thumbnailsBar">
		
		set(layer[scrollAreaContainer_thumbnailsBar].offsetX, get(layer[thumbnailBorderSource_thumbnailsBar].borderWidth));
		set(layer[scrollAreaContainer_thumbnailsBar].offsetY, get(layer[thumbnailBorderSource_thumbnailsBar].borderWidth));
		
		
		mul(totalOffsetX_thumbnailsBar, get(layer[thumbnailBorderSource_thumbnailsBar].borderWidth), 2);
		mul(totalOffsetY_thumbnailsBar, get(layer[thumbnailBorderSource_thumbnailsBar].borderWidth), 2);
		
		
		if(startResize_thumbnailsBar,
			sub(layer[scrollAreaContainer_thumbnailsBar].itemWidth, get(totalOffsetX_thumbnailsBar));
			sub(layer[scrollAreaContainer_thumbnailsBar].itemHeight, get(totalOffsetY_thumbnailsBar));
		);
		
		
		set(layer[scrollAreaContainer_thumbnailsBar].thumbWidth, get(layer[scrollAreaContainer_thumbnailsBar].itemWidth));
		set(layer[scrollAreaContainer_thumbnailsBar].thumbHeight, get(layer[scrollAreaContainer_thumbnailsBar].itemHeight));
		
		add(layer[scrollAreaContainer_thumbnailsBar].itemWidth, get(totalOffsetX_thumbnailsBar));
		add(layer[scrollAreaContainer_thumbnailsBar].itemHeight, get(totalOffsetY_thumbnailsBar));
	</action>
		
	
	<action name="thumbnailBorderImageInit_thumbnailsBar">
		
		set(layer[scrollAreaContainer_thumbnailsBar].offsetX, get(layer[thumbnailBorderSource_thumbnailsBar].offsetX));
		set(layer[scrollAreaContainer_thumbnailsBar].offsetY, get(layer[thumbnailBorderSource_thumbnailsBar].offsetY));
		
		
		mul(totalOffsetX_thumbnailsBar, get(layer[thumbnailBorderSource_thumbnailsBar].offsetX), 2);
		mul(totalOffsetY_thumbnailsBar, get(layer[thumbnailBorderSource_thumbnailsBar].offsetY), 2);
		
		
		if(startResize_thumbnailsBar,
			sub(layer[scrollAreaContainer_thumbnailsBar].itemWidth, get(totalOffsetX_thumbnailsBar));
			sub(layer[scrollAreaContainer_thumbnailsBar].itemHeight, get(totalOffsetY_thumbnailsBar));
		);
		
		
		set(layer[scrollAreaContainer_thumbnailsBar].thumbWidth, get(layer[scrollAreaContainer_thumbnailsBar].itemWidth));
		set(layer[scrollAreaContainer_thumbnailsBar].thumbHeight, get(layer[scrollAreaContainer_thumbnailsBar].itemHeight));
		
		add(layer[scrollAreaContainer_thumbnailsBar].itemWidth, get(totalOffsetX_thumbnailsBar));
		add(layer[scrollAreaContainer_thumbnailsBar].itemHeight, get(totalOffsetY_thumbnailsBar));
		
		
		div(layer[thumbnailBorderSource_thumbnailsBar].quarterHeight, get(layer[thumbnailBorderSource_thumbnailsBar].height), 4);
		
		
		set(cropX_thumbnailsBar, 0);
		set(cropY_thumbnailsBar, 0);
		set(cropW_thumbnailsBar, get(layer[thumbnailBorderSource_thumbnailsBar].width));
		set(cropH_thumbnailsBar, get(layer[thumbnailBorderSource_thumbnailsBar].quarterHeight));
		txtadd(layer[thumbnailBorderSource_thumbnailsBar].cropDefault, get(cropX_thumbnailsBar), '|', get(cropY_thumbnailsBar), '|', get(cropW_thumbnailsBar), '|', get(cropH_thumbnailsBar));

		
		add(cropY_thumbnailsBar, get(layer[thumbnailBorderSource_thumbnailsBar].quarterHeight));
		txtadd(layer[thumbnailBorderSource_thumbnailsBar].cropHover, get(cropX_thumbnailsBar), '|', get(cropY_thumbnailsBar), '|', get(cropW_thumbnailsBar), '|', get(cropH_thumbnailsBar));
		
		
		add(cropY_thumbnailsBar, get(layer[thumbnailBorderSource_thumbnailsBar].quarterHeight));
		txtadd(layer[thumbnailBorderSource_thumbnailsBar].cropSelected, get(cropX_thumbnailsBar), '|', get(cropY_thumbnailsBar), '|', get(cropW_thumbnailsBar), '|', get(cropH_thumbnailsBar));
		
		
		add(cropY_thumbnailsBar, get(layer[thumbnailBorderSource_thumbnailsBar].quarterHeight));
		txtadd(layer[thumbnailBorderSource_thumbnailsBar].cropVisited, get(cropX_thumbnailsBar), '|', get(cropY_thumbnailsBar), '|', get(cropW_thumbnailsBar), '|', get(cropH_thumbnailsBar));
		
		
		set(scaleX_thumbnailsBar, get(layer[thumbnailBorderSource_thumbnailsBar].offsetX));
		set(scaleY_thumbnailsBar, get(layer[thumbnailBorderSource_thumbnailsBar].offsetY));
		sub(scaleW_thumbnailsBar, get(layer[thumbnailBorderSource_thumbnailsBar].width), get(totalOffsetX_thumbnailsBar));
		sub(scaleH_thumbnailsBar, get(layer[thumbnailBorderSource_thumbnailsBar].quarterHeight), get(totalOffsetY_thumbnailsBar));
		txtadd(layer[thumbnailBorderSource_thumbnailsBar].scale9grid, get(scaleX_thumbnailsBar), '|', get(scaleY_thumbnailsBar), '|', get(scaleW_thumbnailsBar), '|', get(scaleH_thumbnailsBar));
	</action>
	
	
	<action name="loadThumbs_thumbnailsBar">
		if(layer[thumbnailBorderSource_thumbnailsBar].url,
			set(imgCounter_thumbnailsBar, 1);
		,
			set(imgCounter_thumbnailsBar, 0);
		);
		
		if(layer[thumbnailBorderSource_thumbnailsBar].url,
			if(borderLoaded_thumbnailsBar,
				dec(imgCounter_thumbnailsBar);
			);
		);
		
		if(imgCounter_thumbnailsBar LE 0,
			stopdelayedcall(delayedCallOnLoadCompleteBorder_thumbnailsBar);
			loadThumbsPartTwo_thumbnailsBar();
		,
			delayedcall(delayedCallOnLoadCompleteBorder_thumbnailsBar, 0.2, loadThumbs_thumbnailsBar());
		);
	</action>
	
	<action name="loadThumbsPartTwo_thumbnailsBar">
		ifnot(layer[scrollAreaContainer_thumbnailsBar].ready,
			
			
			if(layer[thumbnailBorderSource_thumbnailsBar].url,
				thumbnailBorderImageInit_thumbnailsBar();
			,
				thumbnailBorderDrawInit_thumbnailsBar();
			);
			
			
			set(thumbsCounter_thumbnailsBar, 0);
			
			
				for( set(i_thumbnailsBar, 0), i_thumbnailsBar LT scene.count, inc(i_thumbnailsBar),
					createThumb_thumbnailsBar(get(scene[get(i_thumbnailsBar)].name), get(scene[get(i_thumbnailsBar)].thumburl), get(i_thumbnailsBar), get(scene[get(i_thumbnailsBar)].titleid));
					inc(thumbsCounter_thumbnailsBar);
				);
			
			
			
			
			
			
			set(layer[scrollAreaContainer_thumbnailsBar].currentThumbsCount, get(thumbsCounter_thumbnailsBar));
			
			
			setSize_thumbnailsBar(get(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].width), get(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].height));
			
			
			set(layer[scrollAreaContainer_thumbnailsBar].visible, true);
			
			
				if (tour_displaycontrols,
					showWithControlsBar_thumbnailsBar();
				,
					hideWithControlsBar_thumbnailsBar();
				);
			
			
			set(layer[scrollAreaContainer_thumbnailsBar].ready, true);
		);
	</action>
	
	
	<action name="setSize_thumbnailsBar">
		
		
		set(layer[scrollAreaContainer_thumbnailsBar].targetWidth, %1);
		set(layer[scrollAreaContainer_thumbnailsBar].targetHeight, %2);
		
		
		set(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].width, %1);
		set(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].height, %2);
		layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].updatepos();
		
		
		mul(totalMarginX_thumbnailsBar, get(layer[scrollAreaContainer_thumbnailsBar].marginX), 2);
		mul(totalMarginY_thumbnailsBar, get(layer[scrollAreaContainer_thumbnailsBar].marginY), 2);
		
			add(totalPluginWidth_thumbnailsBar, get(totalMarginX_thumbnailsBar), get(layer[scrollAreaContainer_thumbnailsBar].itemWidth));
			
			
			
			if(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].pixelwidth LT totalPluginWidth_thumbnailsBar,
				set(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].width, get(totalPluginWidth_thumbnailsBar));
			);
		
		layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].updatepos();
		
		
		sub(containerWidth_thumbnailsBar, get(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].pixelwidth), get(totalMarginX_thumbnailsBar));
		sub(containerHeight_thumbnailsBar, get(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].pixelheight), get(totalMarginY_thumbnailsBar));

		
		set(layer[scrollAreaContainer_thumbnailsBar].width, get(containerWidth_thumbnailsBar));
		set(layer[scrollAreaContainer_thumbnailsBar].height, get(containerHeight_thumbnailsBar));
		
		set(scrollAreaSize_thumbnailsBar, 0);
		
		
		mul(totalThumbsSpacer_thumbnailsBar, get(layer[scrollAreaContainer_thumbnailsBar].currentThumbsCount), get(layer[scrollAreaContainer_thumbnailsBar].thumbSpacer));
		sub(totalThumbsSpacer_thumbnailsBar, get(layer[scrollAreaContainer_thumbnailsBar].thumbSpacer));
		
		set(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].visible, true);
		
		
			mul(scrollAreaSize_thumbnailsBar, get(layer[scrollAreaContainer_thumbnailsBar].itemHeight), get(layer[scrollAreaContainer_thumbnailsBar].currentThumbsCount));
			add(scrollAreaSize_thumbnailsBar, get(totalThumbsSpacer_thumbnailsBar));

			set(layer[thumbsScrollArea_thumbnailsBar].width, get(layer[scrollAreaContainer_thumbnailsBar].itemWidth));
			set(layer[thumbsScrollArea_thumbnailsBar].height, get(scrollAreaSize_thumbnailsBar));
			
			
			if(layer[scrollAreaContainer_thumbnailsBar].height LT layer[scrollAreaContainer_thumbnailsBar].itemHeight,
				set(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].visible, false);
			,
				verifyThumbnailsBarVisibility_thumbnailsBar();
			);
			
		
		
		if(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].width LT 0,
			set(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].visible, false);
		);
		
	</action>
	
	
	<action name="verifyThumbnailsBarVisibility_thumbnailsBar">
		if(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].visible,
			set(boolValue_thumbnailsBar, false);
			
			if (tour_displaythumbnails,
				if (tour_displaycontrols,
					set(boolValue_thumbnailsBar, true);
				);
			);
			
			set(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].visible, get(boolValue_thumbnailsBar));
		);
	</action>
	
	
	<action name="createThumb_thumbnailsBar">

			add(offsetFactor_thumbnailsBar, get(layer[scrollAreaContainer_thumbnailsBar].itemHeight), get(layer[scrollAreaContainer_thumbnailsBar].thumbSpacer));
	
			mul(thumbIncPos_thumbnailsBar, %3, get(offsetFactor_thumbnailsBar));
			
			
			if(layer[thumbnailBorderSource_thumbnailsBar].url,
				add(thumbIncPos_thumbnailsBar, get(layer[scrollAreaContainer_thumbnailsBar].offsetY));
			);
			
		
		mul(negativeOffsetX_thumbnailsBar, get(layer[scrollAreaContainer_thumbnailsBar].offsetX), -1);
		mul(negativeOffsetY_thumbnailsBar, get(layer[scrollAreaContainer_thumbnailsBar].offsetY), -1);
		
		set(thumbName, 'thumb_');
		txtadd(thumbName, %1);
		txtadd(thumbName, '_thumbnailsBar');
		addlayer(get(thumbName));

		
		set(thumbTitleName, 'thumbtitle_');
		txtadd(thumbTitleName, %1);
		txtadd(thumbTitleName, '_thumbnailsBar');
		addlayer(get(thumbTitleName));	
		set(layer[get(thumbTitleName)].type              , text);
		set(layer[get(thumbTitleName)].keep              , true);
		set(layer[get(thumbTitleName)].parent            , get(thumbName));
    set(layer[get(thumbTitleName)].interactivecontent, false);
		set(layer[get(thumbTitleName)].align             , topleft);
		set(layer[get(thumbTitleName)].x                 , 2);
		set(layer[get(thumbTitleName)].y                 , 0);
		set(layer[get(thumbTitleName)].css               , "text-align:left;color:#ffffff;
                                                        font-family:Arial;font-size:12px;");
    set(layer[get(thumbTitleName)].bg                , false);
    set(layer[get(thumbTitleName)].bgborder          , 0);
    set(layer[get(thumbTitleName)].enabled           , false);
    set(layer[get(thumbTitleName)].capture           , false);
		set(layer[get(thumbTitleName)].width             , get(layer[scrollAreaContainer_thumbnailsBar].thumbWidth));
		getmessage(layer[get(thumbTitleName)].html, %4);

		set(thumbBorderName, 'thumbBorder_');
		txtadd(thumbBorderName, %1);
		txtadd(thumbBorderName, '_thumbnailsBar');
		addlayer(get(thumbBorderName));
		
		
		ifnot(layer[thumbnailBorderSource_thumbnailsBar].url,
			set(layer[get(thumbBorderName)].type, container);
			set(layer[get(thumbBorderName)].parent, thumbsScrollArea_thumbnailsBar);
		);
    set(layer[get(thumbBorderName)].maskchildren, true);

		
		set(layer[get(thumbName)].onloaded, loadedImages_thumbnailsBar("thumbnail"););
		set(layer[get(thumbName)].url, %2);
		set(layer[get(thumbName)].keep, true);
		set(layer[get(thumbName)].width, get(layer[scrollAreaContainer_thumbnailsBar].thumbWidth));
		set(layer[get(thumbName)].height, get(layer[scrollAreaContainer_thumbnailsBar].thumbHeight));
		set(layer[get(thumbName)].align, topleft);
		
		
			set(layer[get(thumbName)].x, get(layer[scrollAreaContainer_thumbnailsBar].offsetX));
		
			if(layer[thumbnailBorderSource_thumbnailsBar].url,
				set(layer[get(thumbName)].parent, thumbsScrollArea_thumbnailsBar);
				set(layer[get(thumbName)].y, get(thumbIncPos_thumbnailsBar));
			,
				set(layer[get(thumbName)].parent, get(thumbBorderName));
				set(layer[get(thumbName)].y, get(layer[scrollAreaContainer_thumbnailsBar].offsetY));
				set(layer[get(thumbName)].onclick, resetMouseBehavior_thumbnailsBar(); mainloadscene(%1); delayedcall(0.1,highlightThumb_thumbnailsBar(%1)));
			);
			
		
		
		set(layer[get(thumbBorderName)].keep, true);
		set(layer[get(thumbBorderName)].width, get(layer[scrollAreaContainer_thumbnailsBar].itemWidth));
		set(layer[get(thumbBorderName)].height, get(layer[scrollAreaContainer_thumbnailsBar].itemHeight));
		set(layer[get(thumbBorderName)].align, topleft);
		
		if(layer[thumbnailBorderSource_thumbnailsBar].url,
			set(layer[get(thumbBorderName)].url, get(layer[thumbnailBorderSource_thumbnailsBar].url));
			set(layer[get(thumbBorderName)].scale9grid, get(layer[thumbnailBorderSource_thumbnailsBar].scale9grid));
			set(layer[get(thumbBorderName)].parent, get(thumbName));
			set(layer[get(thumbBorderName)].x, get(negativeOffsetX_thumbnailsBar));
			set(layer[get(thumbBorderName)].y, get(negativeOffsetY_thumbnailsBar));
			set(layer[get(thumbBorderName)].onclick, resetMouseBehavior_thumbnailsBar(); mainloadscene(%1); delayedcall(0.1,highlightThumb_thumbnailsBar(%1)));
		,
			
				set(layer[get(thumbBorderName)].y, get(thumbIncPos_thumbnailsBar)); 
				
		);

    set(thumbSeenName, 'thumbSeenCheckMark_');
    txtadd(thumbSeenName, %1);
    txtadd(thumbSeenName, '_thumbnailsBar');
    addlayer(get(thumbSeenName));
    set(layer[get(thumbSeenName)].keep   , true);
    copy(layer[get(thumbSeenName)].visible, scene[%1].seen);
    set(layer[get(thumbSeenName)].enabled, false);
    set(layer[get(thumbSeenName)].capture, false);
    copy(layer[get(thumbSeenName)].url   , layer[seenCheckMarkSource_thumbnailsBar].url);
    set(layer[get(thumbSeenName)].parent , get(thumbName));
    set(layer[get(thumbSeenName)].align  , "topright");
    set(layer[get(thumbSeenName)].x      , "0");
    set(layer[get(thumbSeenName)].y      , "0");

    set(layer[get(thumbSeenName)].height , "20");
    set(layer[get(thumbSeenName)].width  , "prop");

		
		setupMouseBehavior_thumbnailsBar(%1, %4);
		
	</action>
	

  <action name="updateTitles_thumbnailsBar">

		for( set(i_thumbnailsBar, 0), i_thumbnailsBar LT scene.count, inc(i_thumbnailsBar),
		      set(thumbTitleName, 'thumbtitle_');
    		  txtadd(thumbTitleName, get(scene[get(i_thumbnailsBar)].name));
      		txtadd(thumbTitleName, '_thumbnailsBar');
		      getmessage(layer[get(thumbTitleName)].html, get(scene[get(i_thumbnailsBar)].titleid));
				);


  </action>	
	
	<action name="removeThumb_thumbnailsBar">
		set(thumbName, 'thumb_');
		txtadd(thumbName, %1);
		txtadd(thumbName, '_thumbnailsBar');
		removelayer(get(thumbName));
		
		set(thumbBorderName, 'thumbBorder_');
		txtadd(thumbBorderName, %1);
		txtadd(thumbBorderName, '_thumbnailsBar');
		removelayer(get(thumbBorderName));

		set(thumbTitleName, 'thumbtitle_');
		txtadd(thumbTitleName, %1);
		txtadd(thumbTitleName, '_thumbnailsBar');
		removelayer(get(thumbTitleName));

    set(thumbSeenName, 'thumbSeenCheckMark_');
    txtadd(thumbSeenName, %1);
    txtadd(thumbSeenName, '_thumbnailsBar');
		removelayer(get(thumbSeenName));
	</action>
	
	
	
	<action name="setupArrows_thumbnailsBar">
		
		if(layer[scrollAreaContainer_thumbnailsBar].adjustToContent,
			hideArrows_thumbnailsBar();
		,
			ifnot(device.touchdevice,
				
					if(layer[scrollAreaContainer_thumbnailsBar].height LT layer[thumbsScrollArea_thumbnailsBar].height,
				
					showArrows_thumbnailsBar();
				,
					hideArrows_thumbnailsBar();
				);
			,
				hideArrows_thumbnailsBar();
			);
		);
		
		
		if(%1,
			scrollToCurrentThumb_thumbnailsBar();
		);
		
		
			
			if(layer[scrollAreaContainer_thumbnailsBar].height LT layer[scrollAreaContainer_thumbnailsBar].itemHeight,
				set(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].visible, false);
			);
	</action>
	
	
	<action name="showArrows_thumbnailsBar">
		
		
		
		
		set(layer[scrollPrevArrow_thumbnailsBar].visible, true);
		set(layer[scrollNextArrow_thumbnailsBar].visible, true);
		
		
		
			
			add(totalArrowSize_thumbnailsBar, get(layer[scrollPrevArrow_thumbnailsBar].height), get(layer[scrollNextArrow_thumbnailsBar].height));
		
			
			sub(scrollAreaContainerSize_thumbnailsBar, get(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].pixelheight), get(totalArrowSize_thumbnailsBar));
		
			set(layer[scrollAreaContainer_thumbnailsBar].height, get(scrollAreaContainerSize_thumbnailsBar));
		
			set(layer[scrollAreaContainer_thumbnailsBar].y, get(layer[scrollPrevArrow_thumbnailsBar].height));
			
		
		
		set(layer[scrollPrevArrow_thumbnailsBar].onhover, scrollPrev_thumbnailsBar(););
		set(layer[scrollNextArrow_thumbnailsBar].onhover, scrollNext_thumbnailsBar(););
		
		set(layer[scrollPrevArrow_thumbnailsBar].onclick, scrollPrev_thumbnailsBar(get(layer[scrollAreaContainer_thumbnailsBar].scrollSpeedAcceleration)););
		set(layer[scrollNextArrow_thumbnailsBar].onclick, scrollNext_thumbnailsBar(get(layer[scrollAreaContainer_thumbnailsBar].scrollSpeedAcceleration)););
		
		
		
		
		
		set(layer[scrollPrevArrow_thumbnailsBar].onout, set(layer[scrollAreaContainer_thumbnailsBar].scrollSpeed, get(layer[scrollAreaContainer_thumbnailsBar].scrollSpeedInit)););
		set(layer[scrollNextArrow_thumbnailsBar].onout, set(layer[scrollAreaContainer_thumbnailsBar].scrollSpeed, get(layer[scrollAreaContainer_thumbnailsBar].scrollSpeedInit)););
		
	</action>
	
	
	
	
	<action name="hideArrows_thumbnailsBar">
		
		set(layer[scrollPrevArrow_thumbnailsBar].visible, false);
		set(layer[scrollNextArrow_thumbnailsBar].visible, false);
		
		
		
			mul(totalMargin_thumbnailsBar, get(layer[scrollAreaContainer_thumbnailsBar].marginY), 2);
			
			sub(scrollAreaContainerSize_thumbnailsBar, get(layer[get(layer[scrollAreaContainer_thumbnailsBar].parent)].pixelheight), get(totalMargin_thumbnailsBar));
			
			set(layer[scrollAreaContainer_thumbnailsBar].height, get(scrollAreaContainerSize_thumbnailsBar));
			set(layer[scrollAreaContainer_thumbnailsBar].y, get(layer[scrollAreaContainer_thumbnailsBar].marginY));
			 
			
	</action>
	
	
	<action name="scrollPrev_thumbnailsBar">
		
		
		if(%1,
			inc(layer[scrollAreaContainer_thumbnailsBar].scrollSpeed, %1);
		);
		
		layer[thumbsScrollArea_thumbnailsBar].stopscrolling();
		
		set(scrollLimit_thumbnailsBar, 0);
		
		
			
				sub(scrollLimit_thumbnailsBar, get(layer[thumbsScrollArea_thumbnailsBar].height), get(layer[scrollAreaContainer_thumbnailsBar].height));
				div(scrollLimit_thumbnailsBar, 2);
			
			add(layer[thumbsScrollArea_thumbnailsBar].y, get(layer[scrollAreaContainer_thumbnailsBar].scrollSpeed));
			if(layer[thumbsScrollArea_thumbnailsBar].y GE scrollLimit_thumbnailsBar,
				set(layer[thumbsScrollArea_thumbnailsBar].y, get(scrollLimit_thumbnailsBar));
			);
			
		
		if(layer[scrollAreaContainer_thumbnailsBar].scrollSpeed LT layer[scrollAreaContainer_thumbnailsBar].scrollSpeedMax,
			inc(layer[scrollAreaContainer_thumbnailsBar].scrollSpeed);
		);
		
	</action>
	
	
	<action name="scrollNext_thumbnailsBar">
		
		
		if(%1,
			inc(layer[scrollAreaContainer_thumbnailsBar].scrollSpeed, %1);
		);
		
		layer[thumbsScrollArea_thumbnailsBar].stopscrolling();
		
			
			sub(scrollLimit_thumbnailsBar, get(layer[thumbsScrollArea_thumbnailsBar].height), get(layer[scrollAreaContainer_thumbnailsBar].height));
			
				div(scrollLimit_thumbnailsBar, 2);
			mul(scrollLimit_thumbnailsBar, -1);
			
			sub(layer[thumbsScrollArea_thumbnailsBar].y, get(layer[scrollAreaContainer_thumbnailsBar].scrollSpeed));
			if(layer[thumbsScrollArea_thumbnailsBar].y LE scrollLimit_thumbnailsBar,
				set(layer[thumbsScrollArea_thumbnailsBar].y, get(scrollLimit_thumbnailsBar));
			);
		
		if(layer[scrollAreaContainer_thumbnailsBar].scrollSpeed LT layer[scrollAreaContainer_thumbnailsBar].scrollSpeedMax,
			inc(layer[scrollAreaContainer_thumbnailsBar].scrollSpeed);
		);
		
	</action>
	
	
	<action name="resetMouseBehavior_thumbnailsBar">
	
		
		
			for( set(j_thumbnailsBar, 0), j_thumbnailsBar LT scene.count, inc(j_thumbnailsBar),
				set(thumbBorderName, 'thumbBorder_');
				txtadd(thumbBorderName, get(scene[get(j_thumbnailsBar)].name));
				txtadd(thumbBorderName, '_thumbnailsBar');
				
				setupMouseBehavior_thumbnailsBar(get(scene[get(j_thumbnailsBar)].name), get(scene[get(j_thumbnailsBar)].titleid));
			);
		
	</action>
	
	
	<action name="setupMouseBehavior_thumbnailsBar">

		set(thumbName, 'thumb_');
		txtadd(thumbName, %1);
		txtadd(thumbName, '_thumbnailsBar');
		
		set(thumbBorderName, 'thumbBorder_');
		txtadd(thumbBorderName, %1);
		txtadd(thumbBorderName, '_thumbnailsBar');
		
		if(layer[thumbnailBorderSource_thumbnailsBar].url,
			set(layer[get(thumbBorderName)].crop, get(layer[thumbnailBorderSource_thumbnailsBar].cropDefault));
			set(layer[get(thumbBorderName)].onovercrop, get(layer[thumbnailBorderSource_thumbnailsBar].cropHover));
			set(layer[get(thumbBorderName)].ondowncrop, get(layer[thumbnailBorderSource_thumbnailsBar].cropHover));
			set(layer[get(thumbBorderName)].tooltip, %2);
		,
			set(layer[get(thumbBorderName)].bgcolor, get(layer[thumbnailBorderSource_thumbnailsBar].borderColorDefault));
			set(layer[get(thumbBorderName)].bgalpha, get(layer[thumbnailBorderSource_thumbnailsBar].borderAlphaDefault));
			
			set(layer[get(thumbName)].onover, 
				set(layer[get(parent)].bgcolor, get(layer[thumbnailBorderSource_thumbnailsBar].borderColorHover));
				set(layer[get(parent)].bgalpha, get(layer[thumbnailBorderSource_thumbnailsBar].borderAlphaHover));
			);
			
			set(layer[get(thumbName)].onout, 
				set(layer[get(parent)].bgcolor, get(layer[thumbnailBorderSource_thumbnailsBar].borderColorDefault));
				set(layer[get(parent)].bgalpha, get(layer[thumbnailBorderSource_thumbnailsBar].borderAlphaDefault));
				
			);
		);
	
	</action>
	
	
	<action name="highlightCurrentThumb_thumbnailsBar">
			delayedcall(0.1,highlightThumb_thumbnailsBar(get(xml.scene)));
	</action>
	
	
	<action name="highlightThumb_thumbnailsBar">
	
		set(thumbBorderName, 'thumbBorder_');
		txtadd(thumbBorderName, %1);
		txtadd(thumbBorderName, '_thumbnailsBar');
		
		if(layer[thumbnailBorderSource_thumbnailsBar].url,
			set(layer[get(thumbBorderName)].crop, get(layer[thumbnailBorderSource_thumbnailsBar].cropSelected));
			set(layer[get(thumbBorderName)].onovercrop, get(layer[thumbnailBorderSource_thumbnailsBar].cropSelected));
			set(layer[get(thumbBorderName)].ondowncrop, get(layer[thumbnailBorderSource_thumbnailsBar].cropSelected));
		,
			set(thumbName, 'thumb_');
			txtadd(thumbName, %1);
			txtadd(thumbName, '_thumbnailsBar');
			
			set(layer[get(thumbBorderName)].bgcolor, get(layer[thumbnailBorderSource_thumbnailsBar].borderColorSelected));
			set(layer[get(thumbBorderName)].bgalpha, get(layer[thumbnailBorderSource_thumbnailsBar].borderAlphaSelected));
			
			set(layer[get(thumbName)].onover, "");
			set(layer[get(thumbName)].onout, "");
		);

    set(thumbSeenName, 'thumbSeenCheckMark_');
    txtadd(thumbSeenName, %1);
    txtadd(thumbSeenName, '_thumbnailsBar');
    set(layer[get(thumbSeenName)].visible, true);

		scrollToThumb_thumbnailsBar(%1);
	</action>
	
	
	<action name="scrollToCurrentThumb_thumbnailsBar">
			scrollToThumb_thumbnailsBar(get(xml.scene));
	</action>
	
	
	<action name="scrollToThumb_thumbnailsBar">
		
		set(thumbName, 'thumb_');
		set(thumbBorderName, 'thumbBorder_');
		
		txtadd(thumbName, %1);
		txtadd(thumbName, '_thumbnailsBar');
		txtadd(thumbBorderName, %1);
		txtadd(thumbBorderName, '_thumbnailsBar');

			set(posY_thumbnailsBar, 0);
			if(layer[thumbnailBorderSource_thumbnailsBar].url,
				div(halfThumbHeight_thumbnailsBar, get(layer[get(thumbName)].height), 2);
				ifnot(layer[scrollAreaContainer_thumbnailsBar].adjustToContent,
					add(posY_thumbnailsBar, get(layer[get(thumbName)].y), get(halfThumbHeight_thumbnailsBar));
				);
				if(layer[thumbsScrollArea_thumbnailsBar].scrolltocenter,
					layer[thumbsScrollArea_thumbnailsBar].scrolltocenter(0, get(posY_thumbnailsBar));
				);
			,
				div(halfThumbHeight_thumbnailsBar, get(layer[get(thumbBorderName)].height), 2);
				ifnot(layer[scrollAreaContainer_thumbnailsBar].adjustToContent,
					add(posY_thumbnailsBar, get(layer[get(thumbBorderName)].y), get(halfThumbHeight_thumbnailsBar));
				);
				if(layer[thumbsScrollArea_thumbnailsBar].scrolltocenter,
					layer[thumbsScrollArea_thumbnailsBar].scrolltocenter(0, get(posY_thumbnailsBar));
				);
			);
		
		
	</action>
	





  <!-- ************ -->
  <!-- iControl Bar -->
  <!-- ************ -->


  <krpano theme11barbuilt="false" theme11backgroundwidthwhenclosed="0" theme11backgroundwidthwhenopened="0" theme11IsOpened="false" />
  <events name="theme11events" onxmlcomplete="theme11buildMenuBar();" keep="true"/>
  <action name="theme11buildMenuBar">
    ifnot (theme11barbuilt, theme11buildMenu(); set(theme11barbuilt, true););
  </action>

  <style name="theme11_btn_style"
         keep="true"
         edge="right"
         align="right"
         x="0" y="0"
         width="40" height="40"
         crop="0|0|60|60"
         onovercrop="0|60|60|60"
         ondowncrop="0|120|60|60"
         onhover="showTooltip('plugin', theme11menuTooltipStyle, bottom);"
         onout="hideTooltip();"
         />

  <layer name="theme11_menu_bg"
         keep="true"
         type="container"
         zorder="5"
         width="40"
         height="40"
         align="bottom"
         x="0" y="10"
         maskchildren="true"
         rotate="0"
         visible="false"
         >
    <layer name="theme11btn_hide_hotspots"
            url="%FIRSTXML%/graphics/furman360_pobeda/btn_hide_show_hotspots.png"
            style="theme11_btn_style"
            onclick="hideHotspots();
"
            tooltip="controlBar_POBEDAhideSpotsTip"
            visible="false"
            />
    <layer name="theme11btn_show_hotspots"
            url="%FIRSTXML%/graphics/furman360_pobeda/btn_hide_show_hotspots.png"
            style="theme11_btn_style"
            onclick="showHotspots();
"
            tooltip="controlBar_POBEDAshowSpotsTip"
            visible="false"
            />



    <layer name="theme11btn_in"
            url="%FIRSTXML%/graphics/furman360_pobeda/btn_zoom_in.png"
            ondown="viewControlZoomIn(false);"
            onup="viewControlZoomStop();
"
            style="theme11_btn_style"
            visible="false"
            tooltip="controlBar_POBEDAzoomInTip"
            devices="desktop"
            />
    <layer name="theme11btn_out"
            url="%FIRSTXML%/graphics/furman360_pobeda/btn_zoom_out.png"
            ondown="viewControlZoomOut(false);
"
            onup="viewControlZoomStop();
"
            style="theme11_btn_style"
            visible="false"
            tooltip="controlBar_POBEDAzoomOutTip"
            devices="desktop"
            />




    <layer name="theme11btn_display_floorplan"
            url="%FIRSTXML%/graphics/furman360_pobeda/btn_floorplan.png"
            onclick="showFloorplan();
"
            style="theme11_btn_style"
            visible="false"
            tooltip="controlBar_POBEDAdisplayFloorplanTip"
            />
    <layer name="theme11btn_hide_floorplan"
            url="%FIRSTXML%/graphics/furman360_pobeda/btn_floorplan.png"
            onclick="hideFloorplan();
"
            style="theme11_btn_style"
            visible="false"
            tooltip="controlBar_POBEDAhideFloorplanTip"
            />

    <layer name="theme11btn_share"
            url="%FIRSTXML%/graphics/furman360_pobeda/btn_share.png"
            onclick="shareTour();
"
            style="theme11_btn_style"
            visible="false"
            tooltip="controlBar_POBEDAshareTip"
            />


    <layer name="theme11btn_openfs"
            url="%FIRSTXML%/graphics/furman360_pobeda/btn_enter_fs.png"
            onclick="enterFullscreen();
"
            style="theme11_btn_style"
            visible="false"
            devices="fullscreensupport"
            tooltip="controlBar_POBEDAopenFsTip"
            />
    <layer name="theme11btn_closefs"
            url="%FIRSTXML%/graphics/furman360_pobeda/btn_close_fs.png"
            onclick="exitFullscreen();
"
            style="theme11_btn_style"
            visible="false"
            devices="fullscreensupport"
            tooltip="controlBar_POBEDAcloseFsTip"
            />




    <layer name="theme11btn_display_info"
            url="%FIRSTXML%/graphics/furman360_pobeda/btn_info.png"
            onclick="showTourInfo();
"
            style="theme11_btn_style"
            visible="false"
            tooltip="controlBar_POBEDAdisplayInfoTip"
            />

    <layer name="theme11btn_close_info"
            url="%FIRSTXML%/graphics/furman360_pobeda/btn_info.png"
            onclick="hideTourInfo();
"
            style="theme11_btn_style"
            visible="false"
            tooltip="controlBar_POBEDAhideInfoTip"
            />


    <layer name="theme11btn_hidecontrols"
           url="%FIRSTXML%/graphics/furman360_pobeda/btn_hide_controls.png"
           style="theme11_btn_style"
           onclick="hideTourControls();
"
           visible="false"
           tooltip="controlBar_POBEDAhideControlsTip"
           />
    <layer name="theme11btn_showcontrols"
           url="%FIRSTXML%/graphics/furman360_pobeda/btn_show_controls.png"
           style="theme11_btn_style"
           onclick="showTourControls();
"
           tooltip="controlBar_POBEDAdisplayControlsTip"
           visible="false"
           />
 </layer>




	<events name="theme11hideshowcontrolsevent" 
		hidetourcontrols="theme11hideMenuControls();" 
		showtourcontrols="theme11showMenuControls();" 
		keep="true" />

  <action name="theme11hideMenuControls">
    set(theme11IsOpened, false);
    set(layer[theme11btn_hidecontrols].visible, false);
    set(layer[theme11btn_showcontrols].visible, true);

set(layer[theme11btn_share].visible, false);

if (device.desktop,
	set(layer[theme11btn_in].visible, false);
	set(layer[theme11btn_out].visible, false);
);
	theme11updateFullscreenButtons();

	theme11updateInfoButtons();



	theme11updateHideShowHotspotsButtons();

	theme11updateFloorplanButtons();


    set(layer[theme11_menu_bg].width , get(theme11backgroundwidthwhenclosed));
	set(layer[theme11_menu_bg].visible, true);
  </action>
  <action name="theme11showMenuControls">
    set(theme11IsOpened, true);
    set(layer[theme11btn_hidecontrols].visible, true);
    set(layer[theme11btn_showcontrols].visible, false);
	set(layer[theme11_menu_bg].visible, true);

set(layer[theme11btn_share].visible, true);

if (device.desktop,
	set(layer[theme11btn_in].visible, true);
	set(layer[theme11btn_out].visible, true);
);
	theme11updateFullscreenButtons();

	theme11updateInfoButtons();



	theme11updateHideShowHotspotsButtons();

	theme11updateFloorplanButtons();


    set(layer[theme11_menu_bg].width, get(theme11backgroundwidthwhenopened));
  </action>


	<events name="theme11hideshowinfoevent" 
		onhidetourinfo="theme11updateInfoButtons();" 
		onshowtourinfo="theme11updateInfoButtons();" 
		keep="true" />
	<action name="theme11HideInfoButtons">
		set(layer[theme11btn_display_info].visible, false);
		set(layer[theme11btn_close_info].visible, false);
	</action>
	<action name="theme11ShowInfoButtons">
		if (tour_displayinfo,
			set(layer[theme11btn_close_info].visible, true);
			set(layer[theme11btn_display_info].visible, false);
		,
			set(layer[theme11btn_display_info].visible, true);
			set(layer[theme11btn_close_info].visible, false);
		);
	</action>
	<action name="theme11updateInfoButtons">
		if (tour_displaycontrols,
			theme11ShowInfoButtons();
		,
			theme11HideInfoButtons();
		);
	</action>

	<events name="theme11DisplayFloorPlanEvents" 
		onshowtourfloorplan="theme11updateFloorplanButtons();" 
		onhidetourfloorplan="theme11updateFloorplanButtons();" 
		keep="true" />
	<action name="theme11HideFloorplanButtons">
		set(layer[theme11btn_display_floorplan].visible, false);
		set(layer[theme11btn_hide_floorplan].visible, false);
	</action>
	<action name="theme11ShowFloorplanButtons">
		if (tour_displayfloorplan,
			set(layer[theme11btn_hide_floorplan].visible, true);
			set(layer[theme11btn_display_floorplan].visible, false);
		,
			set(layer[theme11btn_display_floorplan].visible, true);
			set(layer[theme11btn_hide_floorplan].visible, false);
		);
	</action>
	<action name="theme11updateFloorplanButtons">
		if (tour_displaycontrols,
			theme11ShowFloorplanButtons();
		,
			theme11HideFloorplanButtons();
		);
	</action>



  <events name="theme11menufullscreenchangeevent"
          onenterfullscreen="theme11updateFullscreenButtons();"
          onexitfullscreen="theme11updateFullscreenButtons();"
          keep="true"/>
	<action name="theme11HideFullscreenButtons">
		set(layer[theme11btn_openfs].visible , false);
		set(layer[theme11btn_closefs].visible, false);
	</action>
	<action name="theme11ShowFullscreenButtons">
		if (device.fullscreensupport,
			if(tour_fullscreen,
				set(layer[theme11btn_openfs].visible , false);
				set(layer[theme11btn_closefs].visible, true);
			,
				set(layer[theme11btn_openfs].visible ,true);
				set(layer[theme11btn_closefs].visible,false);
			);
		,
			theme11HideFullscreenButtons();
		);
	</action>
	<action name="theme11updateFullscreenButtons">
		if (tour_displaycontrols,
			theme11ShowFullscreenButtons();
		,
			theme11HideFullscreenButtons();
		);
	</action>



  <events name="theme11hotspotsdisplayevents"
          hotspots_visibility_changed="theme11updateHideShowHotspotsButtons"
          keep="true"/>
	<action name="theme11HideHideShowHotspotsButtons">
		set(layer[theme11btn_show_hotspots].visible, false);
		set(layer[theme11btn_hide_hotspots].visible, false);
	</action>
	<action name="theme11ShowHideShowHotspotsButtons">
		if (tour_displayspots,
			set(layer[theme11btn_hide_hotspots].visible, true);
			set(layer[theme11btn_show_hotspots].visible, false);
		,
			set(layer[theme11btn_show_hotspots].visible, true);
			set(layer[theme11btn_hide_hotspots].visible, false);
		);
	</action>
	<action name="theme11updateHideShowHotspotsButtons">
		if (tour_displaycontrols,
			theme11ShowHideShowHotspotsButtons();
		,
			theme11HideHideShowHotspotsButtons();
		);
	</action>

<layer name="theme11menuTooltipStyle"
	keep="true"
	enabled="false"
	capture="false"
	url="%FIRSTXML%/graphics/textfield.swf"
	align="center"
	background="true"
	backgroundcolor="0xffffff"
	backgroundalpha="1"
	border="false"
	css="color:#000000;font-family:Helvetica;font-weight:bold;font-size:14px;text-align:left;"
	height="20"
	autoheight="true"
	autowidth="auto"
	xoffset="0"
	yoffset="0"
	padding="2"
	selectable="false"
	zorder="0"
	visible="false"
	html=""
	edge="bottom"
/>
  <action name="theme11buildMenu">
    
    set(theme11button_pos, 0);

	set(theme11backgroundwidthwhenclosed, 40);
    set(layer[theme11btn_hidecontrols].x, get(theme11button_pos));
    set(layer[theme11btn_showcontrols].x, get(theme11button_pos));
    inc(theme11button_pos, 45);


    set(layer[theme11btn_display_info].x, get(theme11button_pos));
    set(layer[theme11btn_close_info].x  , get(theme11button_pos));
    inc(theme11button_pos, 45);


      if (device.fullscreensupport,
        set(layer[theme11btn_openfs].x , get(theme11button_pos));
        set(layer[theme11btn_closefs].x, get(theme11button_pos));
        inc(theme11button_pos, 45);
      );


      set(layer[theme11btn_share].x, get(theme11button_pos));
      inc(theme11button_pos, 45);

      set(layer[theme11btn_display_floorplan].x , get(theme11button_pos));
      set(layer[theme11btn_hide_floorplan].x    , get(theme11button_pos));
      inc(theme11button_pos, 45);




        set(layer[theme11btn_show_hotspots].x, get(theme11button_pos));
        set(layer[theme11btn_hide_hotspots].x, get(theme11button_pos));
        inc(theme11button_pos, 45);



      if (device.desktop,
        set(layer[theme11btn_out].x, get(theme11button_pos));
        inc(theme11button_pos, 45);
        set(layer[theme11btn_in].x, get(theme11button_pos));
        inc(theme11button_pos, 45);
      );

      dec(theme11button_pos, 5);

      set(theme11backgroundwidthwhenopened, get(theme11button_pos));
      set(layer[theme11_menu_bg].width, get(theme11backgroundwidthwhenopened));
	
	
	
    </action>

	<events name="theme11StartTourEvents" onTourStart="theme11CallOnStartTour();" keep="true" />
	
	<action name="theme11CallOnStartTour">
		
		showTourControls();

	</action>


<!-- ********** -->
<!-- Social Share -->
<!-- id : socialShare -->
<!-- ********** -->


<ptplugin name="socialShare" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="50" type="int" />
		<option name="margin_y" value="50" type="int" />
		<option name="external_padding" value="10" type="int" />
		<option name="animate" value="false" type="bool" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="1" type="float" />
		<option name="container_topleft_border_radius" value="0" type="int" />
		<option name="container_topright_border_radius" value="0" type="int" />
		<option name="container_bottomleft_border_radius" value="0" type="int" />
		<option name="container_bottomright_border_radius" value="0" type="int" />
		<option name="container_border_width" value="0" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="social_btn" value="facebook#twitter#google#vkontakte" type="string" />
		<option name="social_btn_icons" value="iconset0" type="string" />

		<option name="social_orientation" value="horizontal" type="string" />
		<option name="social_btn_size" value="60" type="int" />
		<option name="inner_margin" value="10" type="int" />
		
		
		<option name="title_displayed" value="false" type="bool" />
		<option name="caption_displayed" value="false" type="bool" />
		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="socialShareclose_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_socialShare')" type="string" />
		<option name="zorder" value="6" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>

	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_socialShare">
	set(ptplugin[socialShare].jsready, true);

</action>



<action name="showSocialShare_socialShare">
	ifnot(ptplugin[socialShare].isOpen,
		set(ptplugin[socialShare].isOpen, true);
		pauseautorotation(forceplugin);

			js(invokePluginFunction(socialShare, loadSingleArrayItem, social));
		events.dispatch(onremovedisplayedobject);
	);
</action>

<action name="toggleSocialShare_socialShare">
	js(invokePluginFunction(socialShare, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_socialShare">
	js(invokePluginFunction(socialShare, closeKolorBox));
</action>

<action name="closeKolorBoxCallback_socialShare">
	resumeautorotation(forceplugin);

	
	set(ptplugin[socialShare].isOpen, false);
</action>

<action name="changeLanguage_socialShare">
	if(ptplugin[socialShare].jsready,
		js(invokePluginFunction(socialShare, changeLanguage));
	);
</action>

<events name="kolorBoxEvents_socialShare" 
	keep="true"
	onsharetour="showSocialShare_socialShare();" 
	
	
	changetourlanguage="changeLanguage_socialShare();"
	/>

<!-- ********** -->
<!-- Loading Information -->
<!-- id : loaderinfo -->
<!-- ********** -->

  <events name="loaderinfoevent" onxmlcomplete="loaderinfoupdate();" keep="true"/>

  <action name="loaderinfoupdate">
    if(scene[get(xml.scene)].video,
      set(layer[loaderinfotextfield].visible, false);
    ,
      if (progress.progress == 1,
        delayedcall(0.5, set(layer[loaderinfotextfield].visible, false); );
      ,
        set(layer[loaderinfotextfield].visible, true);
      );
      mul(progresstext, get(progress.progress),100);
      roundval(progresstext);
      txtadd(progresstext, get(progresstext), %);
      set(layer[loaderinfotextfield].html, get(progresstext));
      ifnot(progress.progress GE 1, delayedcall(0.01, loaderinfoupdate() ));
    );
  </action>

  <layer name="loaderinfotextfield"
         keep="true"
         zorder="7"
         type="text"
         align="center"
         x="0"
         y="0"
         bgborder="0"
         bg="false"
         capture="false"
         handcursor="false"
         interactivecontent="false"
         alpha="1"
         visible="true"
         css="
         text-align:center;
         color:#ffffff;
         font-family:Arial;
         font-weight:bold;
         font-size:16px;
         "
  />


<!-- DEBUG PLUGIN - PANORAMA LIST -->
<!-- There are 22 panoramas in the tour -->
<!-- PANORAMA - ID - DIRECTORY
1;pano44;pano_1_44
2;pano12;panorama_2_12
3;pano14;panorama_3_14
4;pano645;_4_645
5;pano646;_5_646
6;pano640;_6_640
7;pano636;_7_636
8;pano327;_8_327
9;pano16;panorama_4_16
10;pano323;_10_323
11;pano324;_11_324
12;pano325;_12_325
13;pano326;_13_326
14;pano496;_14_496
15;pano497;_15_497
16;pano498;_16_498
17;pano499;_17_499
18;pano500;_18_500
19;pano18;panorama_5_18
20;pano20;panorama_6_20
21;pano22;panorama_7_22
22;pano45;pano_22_45
-->

<!-- DEBUG PLUGIN - GROUP LIST -->
<!-- GROUP - ID - DIRECTORY

-->


<!-- WHICH PANORAMA POINTS TO WHICH PANORAMA  -->
<!-- 

Panorama "1" points to : 
 - 2

Panorama "2" points to : 
 - 3
 - 1

Panorama "3" points to : 
 - 4
 - 2
 - 13

Panorama "4" points to : 
 - 3
 - 5
 - 13

Panorama "5" points to : 
 - 4
 - 6

Panorama "6" points to : 
 - 7
 - 5

Panorama "7" points to : 
 - 8
 - 6

Panorama "8" points to : 
 - 9
 - 14
 - 10
 - 7

Panorama "9" points to : 
 - 8

Panorama "10" points to : 
 - 8
 - 11

Panorama "11" points to : 
 - 12
 - 10

Panorama "12" points to : 
 - 13
 - 11

Panorama "13" points to : 
 - 3
 - 12
 - 4

Panorama "14" points to : 
 - 8
 - 15

Panorama "15" points to : 
 - 14
 - 16
 - 17

Panorama "16" points to : 
 - 17
 - 15

Panorama "17" points to : 
 - 16
 - 18
 - 15

Panorama "18" points to : 
 - 19
 - 20
 - 17

Panorama "19" points to : 
 - 20
 - 21
 - 18

Panorama "20" points to : 
 - 19
 - 18

Panorama "21" points to : 
 - 22
 - 19

Panorama "22" points to : 
 - 21
 - 1

-->

<!-- WHICH PANORAMA IS LINKED BY WHICH PANORAMA  -->
<!--

Points back to "1" : 
 - 2
 - 22

Points back to "2" : 
 - 1
 - 3

Points back to "3" : 
 - 2
 - 4
 - 13

Points back to "4" : 
 - 3
 - 5
 - 13

Points back to "5" : 
 - 4
 - 6

Points back to "6" : 
 - 5
 - 7

Points back to "7" : 
 - 6
 - 8

Points back to "8" : 
 - 7
 - 9
 - 10
 - 14

Points back to "9" : 
 - 8

Points back to "10" : 
 - 8
 - 11

Points back to "11" : 
 - 10
 - 12

Points back to "12" : 
 - 11
 - 13

Points back to "13" : 
 - 3
 - 4
 - 12

Points back to "14" : 
 - 8
 - 15

Points back to "15" : 
 - 14
 - 16
 - 17

Points back to "16" : 
 - 15
 - 17

Points back to "17" : 
 - 15
 - 16
 - 18

Points back to "18" : 
 - 17
 - 19
 - 20

Points back to "19" : 
 - 18
 - 20
 - 21

Points back to "20" : 
 - 18
 - 19

Points back to "21" : 
 - 19
 - 22

Points back to "22" : 
 - 21

-->

<!-- ********** -->
<!-- Context menu -->
<!-- id : contextmenu -->
<!-- ********** -->
  <contextmenu fullscreen="false" versioninfo="false" touch="true">
    <item name="author" onclick="getmessage(urltoopen,project_author_url);openurl(get(urltoopen),_blank);" />
    <item name="normal"        onclick="setViewNormal();
" separator="true"/>
    <item name="architectural" onclick="setViewArchitectural();
"/>
    <item name="fullscreenentry" onclick="enterFullscreen();
" separator="true"/>
  </contextmenu>

  <events name="contextmenuevents" keep="true" 
    onenterfullscreen="updateContextMenu" onexitfullscreen="updateContextMenu" 
    onxmlcomplete="updateContextMenu" 
    changetourlanguage="updateContextMenu" 
    />
  <events name="contextmenuvrevents" keep="true" 
    onvravailable="updateContextMenu();" onvrunavailable="updateContextMenu();"
    devices="html5"
    />
  <action name="updateContextMenu">
    getmessage(contextmenu.item[author].caption, project_author_name);
    getmessage(contextmenu.item[normal].caption, contextmenunormallabel);
    getmessage(contextmenu.item[architectural].caption, contextmenuarchitecturallabel);
    set(sceneisfull360, false);
    if(scene[get(xml.scene)].full360,
      sub(viewhfov, panoview.hmax, panoview.hmin);
      if (viewhfov == 360,
        sub(viewvfov, panoview.vmax, panoview.vmin);
        if (viewvfov == 180,
          set(sceneisfull360, true);
        );
      );
    );
    if (sceneisfull360 AND (device.webgl OR device.flash),
    ,
    );
    if (device.fullscreensupport,
      if(tour_fullscreen,
        getmessage(contextmenu.item[fullscreenentry].caption, contextmenucloseFsLabel);
        set(contextmenu.item[fullscreenentry].onclick, exitFullscreen();
);
       ,
        getmessage(contextmenu.item[fullscreenentry].caption, contextmenuopenFsLabel);
        set(contextmenu.item[fullscreenentry].onclick, enterFullscreen();
);
      );
     ,
      set(contextmenu.item[fullscreenentry].visible, false);
    );
  </action>

<!-- ********** -->
<!-- B_1 -->
<!-- id : gallery -->
<!-- ********** -->

<ptplugin name="gallery" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="10" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="1" type="float" />
		<option name="container_topleft_border_radius" value="0" type="int" />
		<option name="container_topright_border_radius" value="0" type="int" />
		<option name="container_bottomleft_border_radius" value="0" type="int" />
		<option name="container_bottomright_border_radius" value="0" type="int" />
		<option name="container_border_width" value="6" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="false" type="bool" />
		
		<option name="caption_displayed" value="true" type="bool" />
		<option name="caption_position" value="left" type="string" />
		<option name="caption_font" value="Verdana" type="string" />
		<option name="caption_size" value="14" type="int" />
		<option name="caption_weight" value="normal" type="string" />
		<option name="caption_style" value="normal" type="string" />
		<option name="caption_decoration" value="none" type="string" />
		<option name="caption_color" value="000000" type="string" />
		<option name="caption_width" value="236" type="int" />
		<option name="caption_height" value="75" type="int" />
		<option name="caption_textalign" value="left" type="string" />
		
		<option name="play_displayed" value="false" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="galleryplay_text" type="string" />




		<option name="navigation_displayed" value="false" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="000000" type="string" />
		<option name="navprev_text" value="gallerynavprev_text" type="string" />
		<option name="navnext_text" value="gallerynavnext_text" type="string" />




		<option name="navigation_arrows" value="false" type="bool" />




		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="galleryfullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="galleryclose_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery')" type="string" />
		<option name="zorder" value="10" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallerypicture_title0" caption="gallerypicture_caption0" value="virtualtourdata/graphics/gallery/b_1_1.jpg"/>
		<item name="item_2" title="gallerypicture_title1" caption="gallerypicture_caption1" value="virtualtourdata/graphics/gallery/b_1_2.jpg"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery">
	set(ptplugin[gallery].jsready, true);
</action>

<action name="showGallery_gallery">
	ifnot(ptplugin[gallery].isOpen,
		if(ptplugin[gallery].doNotDeleteMe,
			set(ptplugin[gallery].currentCall, false);
		set(ptplugin[gallery].isOpen, true);
		set(ptplugin[gallery].doNotDeleteMe, false);
		set(gallery_boxurl, %1);
		
		js(invokePluginFunction(gallery, openKolorBox, %1));
		,
			set(ptplugin[gallery].currentCall, true);
			set(ptplugin[gallery].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showGallery_gallery(%1););
		);
	,
		if(%1 !== null AND %1 != gallery_boxurl,
			closeKolorBox_gallery();
			delayedcall(0.3,showGallery_gallery(%1););
		);
	);
</action>

<action name="toggleGallery_gallery">
	js(invokePluginFunction(gallery, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery">
	if(ptplugin[gallery].doNotDeleteMe,
		set(ptplugin[gallery].doNotDeleteMe, false);
	,
	js(invokePluginFunction(gallery, closeKolorBox));
	);
</action>

<action name="closeKolorBoxCallback_gallery">
	
	set(ptplugin[gallery].doNotDeleteMe, false);
	set(ptplugin[gallery].isOpen, false);
</action>

<action name="changeLanguage_gallery">
	if(ptplugin[gallery].jsready,
		js(invokePluginFunction(gallery, changeLanguage));
	,
		delayedcall(delay_gallery, 0.1, changeLanguage_gallery(););
	);
</action>

<events name="kolorBoxEvents_gallery" 
	keep="true"
	onremovepano="if(ptplugin[gallery].isOpen,closeKolorBox_gallery(););"
	onremovedisplayedobject="ifnot(ptplugin[gallery].currentCall,if(ptplugin[gallery].isOpen,closeKolorBox_gallery();););"
	changetourlanguage="changeLanguage_gallery();"
	/>

<!-- ********** -->
<!-- K_22 -->
<!-- id : gallery1 -->
<!-- ********** -->

<ptplugin name="gallery1" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="10" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="1" type="float" />
		<option name="container_topleft_border_radius" value="0" type="int" />
		<option name="container_topright_border_radius" value="0" type="int" />
		<option name="container_bottomleft_border_radius" value="0" type="int" />
		<option name="container_bottomright_border_radius" value="0" type="int" />
		<option name="container_border_width" value="6" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="false" type="bool" />
		
		<option name="caption_displayed" value="true" type="bool" />
		<option name="caption_position" value="left" type="string" />
		<option name="caption_font" value="Verdana" type="string" />
		<option name="caption_size" value="14" type="int" />
		<option name="caption_weight" value="normal" type="string" />
		<option name="caption_style" value="normal" type="string" />
		<option name="caption_decoration" value="none" type="string" />
		<option name="caption_color" value="000000" type="string" />
		<option name="caption_width" value="236" type="int" />
		<option name="caption_height" value="75" type="int" />
		<option name="caption_textalign" value="left" type="string" />
		
		<option name="play_displayed" value="false" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="gallery1play_text" type="string" />




		<option name="navigation_displayed" value="false" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="666666" type="string" />
		<option name="navprev_text" value="gallery1navprev_text" type="string" />
		<option name="navnext_text" value="gallery1navnext_text" type="string" />




		<option name="navigation_arrows" value="false" type="bool" />




		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="gallery1fullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="gallery1close_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery1')" type="string" />
		<option name="zorder" value="11" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallery1picture_title0" caption="gallery1picture_caption0" value="virtualtourdata/graphics/gallery1/_22_1.jpg"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery1">
	set(ptplugin[gallery1].jsready, true);
</action>

<action name="showGallery_gallery1">
	ifnot(ptplugin[gallery1].isOpen,
		if(ptplugin[gallery1].doNotDeleteMe,
			set(ptplugin[gallery1].currentCall, false);
		set(ptplugin[gallery1].isOpen, true);
		set(ptplugin[gallery1].doNotDeleteMe, false);
		set(gallery1_boxurl, %1);
		
		js(invokePluginFunction(gallery1, openKolorBox, %1));
		,
			set(ptplugin[gallery1].currentCall, true);
			set(ptplugin[gallery1].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showGallery_gallery1(%1););
		);
	,
		if(%1 !== null AND %1 != gallery1_boxurl,
			closeKolorBox_gallery1();
			delayedcall(0.3,showGallery_gallery1(%1););
		);
	);
</action>

<action name="toggleGallery_gallery1">
	js(invokePluginFunction(gallery1, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery1">
	if(ptplugin[gallery1].doNotDeleteMe,
		set(ptplugin[gallery1].doNotDeleteMe, false);
	,
	js(invokePluginFunction(gallery1, closeKolorBox));
	);
</action>

<action name="closeKolorBoxCallback_gallery1">
	
	set(ptplugin[gallery1].doNotDeleteMe, false);
	set(ptplugin[gallery1].isOpen, false);
</action>

<action name="changeLanguage_gallery1">
	if(ptplugin[gallery1].jsready,
		js(invokePluginFunction(gallery1, changeLanguage));
	,
		delayedcall(delay_gallery1, 0.1, changeLanguage_gallery1(););
	);
</action>

<events name="kolorBoxEvents_gallery1" 
	keep="true"
	onremovepano="if(ptplugin[gallery1].isOpen,closeKolorBox_gallery1(););"
	onremovedisplayedobject="ifnot(ptplugin[gallery1].currentCall,if(ptplugin[gallery1].isOpen,closeKolorBox_gallery1();););"
	changetourlanguage="changeLanguage_gallery1();"
	/>

<!-- ********** -->
<!-- K_21 -->
<!-- id : gallery3 -->
<!-- ********** -->

<ptplugin name="gallery3" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="10" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="1" type="float" />
		<option name="container_topleft_border_radius" value="0" type="int" />
		<option name="container_topright_border_radius" value="0" type="int" />
		<option name="container_bottomleft_border_radius" value="0" type="int" />
		<option name="container_bottomright_border_radius" value="0" type="int" />
		<option name="container_border_width" value="6" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="false" type="bool" />
		
		<option name="caption_displayed" value="true" type="bool" />
		<option name="caption_position" value="left" type="string" />
		<option name="caption_font" value="Verdana" type="string" />
		<option name="caption_size" value="14" type="int" />
		<option name="caption_weight" value="normal" type="string" />
		<option name="caption_style" value="normal" type="string" />
		<option name="caption_decoration" value="none" type="string" />
		<option name="caption_color" value="000000" type="string" />
		<option name="caption_width" value="236" type="int" />
		<option name="caption_height" value="75" type="int" />
		<option name="caption_textalign" value="left" type="string" />
		
		<option name="play_displayed" value="false" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="gallery3play_text" type="string" />




		<option name="navigation_displayed" value="false" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="666666" type="string" />
		<option name="navprev_text" value="gallery3navprev_text" type="string" />
		<option name="navnext_text" value="gallery3navnext_text" type="string" />




		<option name="navigation_arrows" value="false" type="bool" />




		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="gallery3fullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="gallery3close_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery3')" type="string" />
		<option name="zorder" value="12" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallery3picture_title0" caption="gallery3picture_caption0" value="virtualtourdata/graphics/gallery3/_21_1.jpg"/>
		<item name="item_2" title="gallery3picture_title1" caption="gallery3picture_caption1" value="virtualtourdata/graphics/gallery3/_21_2.jpg"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery3">
	set(ptplugin[gallery3].jsready, true);
</action>

<action name="showGallery_gallery3">
	ifnot(ptplugin[gallery3].isOpen,
		if(ptplugin[gallery3].doNotDeleteMe,
			set(ptplugin[gallery3].currentCall, false);
		set(ptplugin[gallery3].isOpen, true);
		set(ptplugin[gallery3].doNotDeleteMe, false);
		set(gallery3_boxurl, %1);
		
		js(invokePluginFunction(gallery3, openKolorBox, %1));
		,
			set(ptplugin[gallery3].currentCall, true);
			set(ptplugin[gallery3].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showGallery_gallery3(%1););
		);
	,
		if(%1 !== null AND %1 != gallery3_boxurl,
			closeKolorBox_gallery3();
			delayedcall(0.3,showGallery_gallery3(%1););
		);
	);
</action>

<action name="toggleGallery_gallery3">
	js(invokePluginFunction(gallery3, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery3">
	if(ptplugin[gallery3].doNotDeleteMe,
		set(ptplugin[gallery3].doNotDeleteMe, false);
	,
	js(invokePluginFunction(gallery3, closeKolorBox));
	);
</action>

<action name="closeKolorBoxCallback_gallery3">
	
	set(ptplugin[gallery3].doNotDeleteMe, false);
	set(ptplugin[gallery3].isOpen, false);
</action>

<action name="changeLanguage_gallery3">
	if(ptplugin[gallery3].jsready,
		js(invokePluginFunction(gallery3, changeLanguage));
	,
		delayedcall(delay_gallery3, 0.1, changeLanguage_gallery3(););
	);
</action>

<events name="kolorBoxEvents_gallery3" 
	keep="true"
	onremovepano="if(ptplugin[gallery3].isOpen,closeKolorBox_gallery3(););"
	onremovedisplayedobject="ifnot(ptplugin[gallery3].currentCall,if(ptplugin[gallery3].isOpen,closeKolorBox_gallery3();););"
	changetourlanguage="changeLanguage_gallery3();"
	/>

<!-- ********** -->
<!-- K_20 -->
<!-- id : gallery4 -->
<!-- ********** -->

<ptplugin name="gallery4" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="10" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="1" type="float" />
		<option name="container_topleft_border_radius" value="0" type="int" />
		<option name="container_topright_border_radius" value="0" type="int" />
		<option name="container_bottomleft_border_radius" value="0" type="int" />
		<option name="container_bottomright_border_radius" value="0" type="int" />
		<option name="container_border_width" value="6" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="false" type="bool" />
		
		<option name="caption_displayed" value="true" type="bool" />
		<option name="caption_position" value="left" type="string" />
		<option name="caption_font" value="Verdana" type="string" />
		<option name="caption_size" value="14" type="int" />
		<option name="caption_weight" value="normal" type="string" />
		<option name="caption_style" value="normal" type="string" />
		<option name="caption_decoration" value="none" type="string" />
		<option name="caption_color" value="000000" type="string" />
		<option name="caption_width" value="236" type="int" />
		<option name="caption_height" value="75" type="int" />
		<option name="caption_textalign" value="left" type="string" />
		
		<option name="play_displayed" value="false" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="gallery4play_text" type="string" />




		<option name="navigation_displayed" value="false" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="666666" type="string" />
		<option name="navprev_text" value="gallery4navprev_text" type="string" />
		<option name="navnext_text" value="gallery4navnext_text" type="string" />




		<option name="navigation_arrows" value="false" type="bool" />




		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="gallery4fullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="gallery4close_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery4')" type="string" />
		<option name="zorder" value="13" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallery4picture_title1" caption="gallery4picture_caption1" value="virtualtourdata/graphics/gallery4/_20_1..jpg"/>
		<item name="item_2" title="gallery4picture_title1" caption="gallery4picture_caption1" value="virtualtourdata/graphics/gallery4/_20_2.jpg"/>
		<item name="item_3" title="gallery4picture_title2" caption="gallery4picture_caption2" value="virtualtourdata/graphics/gallery4/_20_2.jpg"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery4">
	set(ptplugin[gallery4].jsready, true);
</action>

<action name="showGallery_gallery4">
	ifnot(ptplugin[gallery4].isOpen,
		if(ptplugin[gallery4].doNotDeleteMe,
			set(ptplugin[gallery4].currentCall, false);
		set(ptplugin[gallery4].isOpen, true);
		set(ptplugin[gallery4].doNotDeleteMe, false);
		set(gallery4_boxurl, %1);
		
		js(invokePluginFunction(gallery4, openKolorBox, %1));
		,
			set(ptplugin[gallery4].currentCall, true);
			set(ptplugin[gallery4].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showGallery_gallery4(%1););
		);
	,
		if(%1 !== null AND %1 != gallery4_boxurl,
			closeKolorBox_gallery4();
			delayedcall(0.3,showGallery_gallery4(%1););
		);
	);
</action>

<action name="toggleGallery_gallery4">
	js(invokePluginFunction(gallery4, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery4">
	if(ptplugin[gallery4].doNotDeleteMe,
		set(ptplugin[gallery4].doNotDeleteMe, false);
	,
	js(invokePluginFunction(gallery4, closeKolorBox));
	);
</action>

<action name="closeKolorBoxCallback_gallery4">
	
	set(ptplugin[gallery4].doNotDeleteMe, false);
	set(ptplugin[gallery4].isOpen, false);
</action>

<action name="changeLanguage_gallery4">
	if(ptplugin[gallery4].jsready,
		js(invokePluginFunction(gallery4, changeLanguage));
	,
		delayedcall(delay_gallery4, 0.1, changeLanguage_gallery4(););
	);
</action>

<events name="kolorBoxEvents_gallery4" 
	keep="true"
	onremovepano="if(ptplugin[gallery4].isOpen,closeKolorBox_gallery4(););"
	onremovedisplayedobject="ifnot(ptplugin[gallery4].currentCall,if(ptplugin[gallery4].isOpen,closeKolorBox_gallery4();););"
	changetourlanguage="changeLanguage_gallery4();"
	/>

<!-- ********** -->
<!-- R_19 -->
<!-- id : gallery5 -->
<!-- ********** -->

<ptplugin name="gallery5" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="10" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="1" type="float" />
		<option name="container_topleft_border_radius" value="0" type="int" />
		<option name="container_topright_border_radius" value="0" type="int" />
		<option name="container_bottomleft_border_radius" value="0" type="int" />
		<option name="container_bottomright_border_radius" value="0" type="int" />
		<option name="container_border_width" value="6" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="false" type="bool" />
		
		<option name="caption_displayed" value="true" type="bool" />
		<option name="caption_position" value="left" type="string" />
		<option name="caption_font" value="Verdana" type="string" />
		<option name="caption_size" value="14" type="int" />
		<option name="caption_weight" value="normal" type="string" />
		<option name="caption_style" value="normal" type="string" />
		<option name="caption_decoration" value="none" type="string" />
		<option name="caption_color" value="000000" type="string" />
		<option name="caption_width" value="236" type="int" />
		<option name="caption_height" value="75" type="int" />
		<option name="caption_textalign" value="left" type="string" />
		
		<option name="play_displayed" value="false" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="gallery5play_text" type="string" />




		<option name="navigation_displayed" value="false" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="666666" type="string" />
		<option name="navprev_text" value="gallery5navprev_text" type="string" />
		<option name="navnext_text" value="gallery5navnext_text" type="string" />




		<option name="navigation_arrows" value="false" type="bool" />




		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="gallery5fullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="gallery5close_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery5')" type="string" />
		<option name="zorder" value="14" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallery5picture_title3" caption="gallery5picture_caption3" value="virtualtourdata/graphics/gallery5/_19_1.jpg"/>
		<item name="item_2" title="gallery5picture_title1" caption="gallery5picture_caption1" value="virtualtourdata/graphics/gallery5/_19_2.jpg"/>
		<item name="item_3" title="gallery5picture_title2" caption="gallery5picture_caption2" value="virtualtourdata/graphics/gallery5/_19_3.jpg"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery5">
	set(ptplugin[gallery5].jsready, true);
</action>

<action name="showGallery_gallery5">
	ifnot(ptplugin[gallery5].isOpen,
		if(ptplugin[gallery5].doNotDeleteMe,
			set(ptplugin[gallery5].currentCall, false);
		set(ptplugin[gallery5].isOpen, true);
		set(ptplugin[gallery5].doNotDeleteMe, false);
		set(gallery5_boxurl, %1);
		
		js(invokePluginFunction(gallery5, openKolorBox, %1));
		,
			set(ptplugin[gallery5].currentCall, true);
			set(ptplugin[gallery5].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showGallery_gallery5(%1););
		);
	,
		if(%1 !== null AND %1 != gallery5_boxurl,
			closeKolorBox_gallery5();
			delayedcall(0.3,showGallery_gallery5(%1););
		);
	);
</action>

<action name="toggleGallery_gallery5">
	js(invokePluginFunction(gallery5, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery5">
	if(ptplugin[gallery5].doNotDeleteMe,
		set(ptplugin[gallery5].doNotDeleteMe, false);
	,
	js(invokePluginFunction(gallery5, closeKolorBox));
	);
</action>

<action name="closeKolorBoxCallback_gallery5">
	
	set(ptplugin[gallery5].doNotDeleteMe, false);
	set(ptplugin[gallery5].isOpen, false);
</action>

<action name="changeLanguage_gallery5">
	if(ptplugin[gallery5].jsready,
		js(invokePluginFunction(gallery5, changeLanguage));
	,
		delayedcall(delay_gallery5, 0.1, changeLanguage_gallery5(););
	);
</action>

<events name="kolorBoxEvents_gallery5" 
	keep="true"
	onremovepano="if(ptplugin[gallery5].isOpen,closeKolorBox_gallery5(););"
	onremovedisplayedobject="ifnot(ptplugin[gallery5].currentCall,if(ptplugin[gallery5].isOpen,closeKolorBox_gallery5();););"
	changetourlanguage="changeLanguage_gallery5();"
	/>

<!-- ********** -->
<!-- K_9 -->
<!-- id : gallery6 -->
<!-- ********** -->

<ptplugin name="gallery6" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="10" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="1" type="float" />
		<option name="container_topleft_border_radius" value="0" type="int" />
		<option name="container_topright_border_radius" value="0" type="int" />
		<option name="container_bottomleft_border_radius" value="0" type="int" />
		<option name="container_bottomright_border_radius" value="0" type="int" />
		<option name="container_border_width" value="6" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="false" type="bool" />
		
		<option name="caption_displayed" value="true" type="bool" />
		<option name="caption_position" value="left" type="string" />
		<option name="caption_font" value="Verdana" type="string" />
		<option name="caption_size" value="14" type="int" />
		<option name="caption_weight" value="normal" type="string" />
		<option name="caption_style" value="normal" type="string" />
		<option name="caption_decoration" value="none" type="string" />
		<option name="caption_color" value="000000" type="string" />
		<option name="caption_width" value="233" type="int" />
		<option name="caption_height" value="75" type="int" />
		<option name="caption_textalign" value="left" type="string" />
		
		<option name="play_displayed" value="false" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="gallery6play_text" type="string" />




		<option name="navigation_displayed" value="false" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="666666" type="string" />
		<option name="navprev_text" value="gallery6navprev_text" type="string" />
		<option name="navnext_text" value="gallery6navnext_text" type="string" />




		<option name="navigation_arrows" value="false" type="bool" />




		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="gallery6fullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="gallery6close_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery6')" type="string" />
		<option name="zorder" value="15" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallery6picture_title5" caption="gallery6picture_caption5" value="virtualtourdata/graphics/gallery6/_9_1.jpg"/>
		<item name="item_2" title="gallery6picture_title1" caption="gallery6picture_caption1" value="virtualtourdata/graphics/gallery6/_9_2.jpg"/>
		<item name="item_3" title="gallery6picture_title2" caption="gallery6picture_caption2" value="virtualtourdata/graphics/gallery6/_9_3.jpg"/>
		<item name="item_4" title="gallery6picture_title3" caption="gallery6picture_caption3" value="virtualtourdata/graphics/gallery6/_9_4.jpg"/>
		<item name="item_5" title="gallery6picture_title4" caption="gallery6picture_caption4" value="virtualtourdata/graphics/gallery6/_9_5.jpg"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery6">
	set(ptplugin[gallery6].jsready, true);
</action>

<action name="showGallery_gallery6">
	ifnot(ptplugin[gallery6].isOpen,
		if(ptplugin[gallery6].doNotDeleteMe,
			set(ptplugin[gallery6].currentCall, false);
		set(ptplugin[gallery6].isOpen, true);
		set(ptplugin[gallery6].doNotDeleteMe, false);
		set(gallery6_boxurl, %1);
		
		js(invokePluginFunction(gallery6, openKolorBox, %1));
		,
			set(ptplugin[gallery6].currentCall, true);
			set(ptplugin[gallery6].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showGallery_gallery6(%1););
		);
	,
		if(%1 !== null AND %1 != gallery6_boxurl,
			closeKolorBox_gallery6();
			delayedcall(0.3,showGallery_gallery6(%1););
		);
	);
</action>

<action name="toggleGallery_gallery6">
	js(invokePluginFunction(gallery6, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery6">
	if(ptplugin[gallery6].doNotDeleteMe,
		set(ptplugin[gallery6].doNotDeleteMe, false);
	,
	js(invokePluginFunction(gallery6, closeKolorBox));
	);
</action>

<action name="closeKolorBoxCallback_gallery6">
	
	set(ptplugin[gallery6].doNotDeleteMe, false);
	set(ptplugin[gallery6].isOpen, false);
</action>

<action name="changeLanguage_gallery6">
	if(ptplugin[gallery6].jsready,
		js(invokePluginFunction(gallery6, changeLanguage));
	,
		delayedcall(delay_gallery6, 0.1, changeLanguage_gallery6(););
	);
</action>

<events name="kolorBoxEvents_gallery6" 
	keep="true"
	onremovepano="if(ptplugin[gallery6].isOpen,closeKolorBox_gallery6(););"
	onremovedisplayedobject="ifnot(ptplugin[gallery6].currentCall,if(ptplugin[gallery6].isOpen,closeKolorBox_gallery6();););"
	changetourlanguage="changeLanguage_gallery6();"
	/>

<!-- ********** -->
<!-- К_14_18 -->
<!-- id : gallery7 -->
<!-- ********** -->

<ptplugin name="gallery7" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="10" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="1" type="float" />
		<option name="container_topleft_border_radius" value="0" type="int" />
		<option name="container_topright_border_radius" value="0" type="int" />
		<option name="container_bottomleft_border_radius" value="0" type="int" />
		<option name="container_bottomright_border_radius" value="0" type="int" />
		<option name="container_border_width" value="6" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="false" type="bool" />
		
		<option name="caption_displayed" value="true" type="bool" />
		<option name="caption_position" value="left" type="string" />
		<option name="caption_font" value="Verdana" type="string" />
		<option name="caption_size" value="14" type="int" />
		<option name="caption_weight" value="normal" type="string" />
		<option name="caption_style" value="normal" type="string" />
		<option name="caption_decoration" value="none" type="string" />
		<option name="caption_color" value="000000" type="string" />
		<option name="caption_width" value="242" type="int" />
		<option name="caption_height" value="75" type="int" />
		<option name="caption_textalign" value="left" type="string" />
		
		<option name="play_displayed" value="false" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="gallery7play_text" type="string" />




		<option name="navigation_displayed" value="false" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="666666" type="string" />
		<option name="navprev_text" value="gallery7navprev_text" type="string" />
		<option name="navnext_text" value="gallery7navnext_text" type="string" />




		<option name="navigation_arrows" value="false" type="bool" />




		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="gallery7fullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="gallery7close_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery7')" type="string" />
		<option name="zorder" value="16" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallery7picture_title2" caption="gallery7picture_caption2" value="virtualtourdata/graphics/gallery7/_18_1.jpg"/>
		<item name="item_2" title="gallery7picture_title1" caption="gallery7picture_caption1" value="virtualtourdata/graphics/gallery7/_18_2.jpg"/>
		<item name="item_3" title="gallery7picture_title2" caption="gallery7picture_caption2" value="virtualtourdata/graphics/gallery7/_16_1.jpg"/>
		<item name="item_4" title="gallery7picture_title3" caption="gallery7picture_caption3" value="virtualtourdata/graphics/gallery7/_16_2.jpg"/>
		<item name="item_5" title="gallery7picture_title4" caption="gallery7picture_caption4" value="virtualtourdata/graphics/gallery7/_16_3.jpg"/>
		<item name="item_6" title="gallery7picture_title5" caption="gallery7picture_caption5" value="virtualtourdata/graphics/gallery7/_16_4.jpg"/>
		<item name="item_7" title="gallery7picture_title6" caption="gallery7picture_caption6" value="virtualtourdata/graphics/gallery7/_15_1.jpg"/>
		<item name="item_8" title="gallery7picture_title7" caption="gallery7picture_caption7" value="virtualtourdata/graphics/gallery7/_15_2.jpg"/>
		<item name="item_9" title="gallery7picture_title8" caption="gallery7picture_caption8" value="virtualtourdata/graphics/gallery7/_15_3.jpg"/>
		<item name="item_10" title="gallery7picture_title9" caption="gallery7picture_caption9" value="virtualtourdata/graphics/gallery7/_15_4.jpg"/>
		<item name="item_11" title="gallery7picture_title10" caption="gallery7picture_caption10" value="virtualtourdata/graphics/gallery7/_15_5.jpg"/>
		<item name="item_12" title="gallery7picture_title11" caption="gallery7picture_caption11" value="virtualtourdata/graphics/gallery7/_15_6.jpg"/>
		<item name="item_13" title="gallery7picture_title12" caption="gallery7picture_caption12" value="virtualtourdata/graphics/gallery7/_15_7.jpg"/>
		<item name="item_14" title="gallery7picture_title13" caption="gallery7picture_caption13" value="virtualtourdata/graphics/gallery7/_15_8.jpg"/>
		<item name="item_15" title="gallery7picture_title14" caption="gallery7picture_caption14" value="virtualtourdata/graphics/gallery7/_14_1.jpg"/>
		<item name="item_16" title="gallery7picture_title15" caption="gallery7picture_caption15" value="virtualtourdata/graphics/gallery7/_11_1.jpg"/>
		<item name="item_17" title="gallery7picture_title16" caption="gallery7picture_caption16" value="virtualtourdata/graphics/gallery7/_10.jpg"/>
		<item name="item_18" title="gallery7picture_title17" caption="gallery7picture_caption17" value="virtualtourdata/graphics/gallery7/_7.jpg"/>
		<item name="item_19" title="gallery7picture_title18" caption="gallery7picture_caption18" value="virtualtourdata/graphics/gallery7/_4_1.jpg"/>
		<item name="item_20" title="gallery7picture_title19" caption="gallery7picture_caption19" value="virtualtourdata/graphics/gallery7/_4_2.jpg"/>
		<item name="item_21" title="gallery7picture_title20" caption="gallery7picture_caption20" value="virtualtourdata/graphics/gallery7/_4_3.jpg"/>
		<item name="item_22" title="gallery7picture_title24" caption="gallery7picture_caption24" value="virtualtourdata/graphics/gallery7/_4_4.jpg"/>
		<item name="item_23" title="gallery7picture_title21" caption="gallery7picture_caption21" value="virtualtourdata/graphics/gallery7/_4_5.jpg"/>
		<item name="item_24" title="gallery7picture_title22" caption="gallery7picture_caption22" value="virtualtourdata/graphics/gallery7/_4_6_.jpg"/>
		<item name="item_25" title="gallery7picture_title23" caption="gallery7picture_caption23" value="virtualtourdata/graphics/gallery7/_4_7.jpg"/>
		<item name="item_26" title="gallery7picture_title25" caption="gallery7picture_caption25" value="virtualtourdata/graphics/gallery7/_12_1.jpg"/>
		<item name="item_27" title="gallery7picture_title26" caption="gallery7picture_caption26" value="virtualtourdata/graphics/gallery7/_12_2.jpg"/>
		<item name="item_28" title="gallery7picture_title27" caption="gallery7picture_caption27" value="virtualtourdata/graphics/gallery7/_12_3.jpg"/>
		<item name="item_29" title="gallery7picture_title28" caption="gallery7picture_caption28" value="virtualtourdata/graphics/gallery7/_12_4.jpg"/>
		<item name="item_30" title="gallery7picture_title29" caption="gallery7picture_caption29" value="virtualtourdata/graphics/gallery7/_6_1.jpg"/>
		<item name="item_31" title="gallery7picture_title30" caption="gallery7picture_caption30" value="virtualtourdata/graphics/gallery7/_16_1.jpg"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery7">
	set(ptplugin[gallery7].jsready, true);
</action>

<action name="showGallery_gallery7">
	ifnot(ptplugin[gallery7].isOpen,
		if(ptplugin[gallery7].doNotDeleteMe,
			set(ptplugin[gallery7].currentCall, false);
		set(ptplugin[gallery7].isOpen, true);
		set(ptplugin[gallery7].doNotDeleteMe, false);
		set(gallery7_boxurl, %1);
		
		js(invokePluginFunction(gallery7, openKolorBox, %1));
		,
			set(ptplugin[gallery7].currentCall, true);
			set(ptplugin[gallery7].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showGallery_gallery7(%1););
		);
	,
		if(%1 !== null AND %1 != gallery7_boxurl,
			closeKolorBox_gallery7();
			delayedcall(0.3,showGallery_gallery7(%1););
		);
	);
</action>

<action name="toggleGallery_gallery7">
	js(invokePluginFunction(gallery7, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery7">
	if(ptplugin[gallery7].doNotDeleteMe,
		set(ptplugin[gallery7].doNotDeleteMe, false);
	,
	js(invokePluginFunction(gallery7, closeKolorBox));
	);
</action>

<action name="closeKolorBoxCallback_gallery7">
	
	set(ptplugin[gallery7].doNotDeleteMe, false);
	set(ptplugin[gallery7].isOpen, false);
</action>

<action name="changeLanguage_gallery7">
	if(ptplugin[gallery7].jsready,
		js(invokePluginFunction(gallery7, changeLanguage));
	,
		delayedcall(delay_gallery7, 0.1, changeLanguage_gallery7(););
	);
</action>

<events name="kolorBoxEvents_gallery7" 
	keep="true"
	onremovepano="if(ptplugin[gallery7].isOpen,closeKolorBox_gallery7(););"
	onremovedisplayedobject="ifnot(ptplugin[gallery7].currentCall,if(ptplugin[gallery7].isOpen,closeKolorBox_gallery7();););"
	changetourlanguage="changeLanguage_gallery7();"
	/>

<!-- ********** -->
<!-- Аннотация -->
<!-- id : description -->
<!-- ********** -->

<ptplugin name="description" canStart="false" newPano="false" openatstart="false" mode="project" startMethod="showDescription_description" engine="kolorArea">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="start_position" value="left" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="background_color" value="f2f2f2" type="string" />
		<option name="background_alpha" value="1" type="float" />
		<option name="topleft_radius" value="0" type="int" />
		<option name="topright_radius" value="0" type="int" />
		<option name="bottomleft_radius" value="0" type="int" />
		<option name="bottomright_radius" value="0" type="int" />
		<option name="area_border_width" value="0" type="int" />
		<option name="area_border_color" value="f2f2f2" type="string" />
		<option name="area_border_alpha" value="1" type="float" />
		<option name="padding" value="15" type="int" />
		<option name="display_title" value="false" type="bool" />
		<option name="close_displayed" value="true" type="bool" />
		<option name="close_text" value="descriptiondisplay_close_text" type="string" />

		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="area_width" value="600" type="int" />
		<option name="area_height" value="700" type="int" />
		<option name="area_width_unit" value="pixel" type="string" />
		<option name="area_height_unit" value="pixel" type="string" />
		<option name="animation" value="false" type="bool" />
		<option name="animation_duration" value="500" type="int" />
		<option name="refresh_content" value="true" type="bool" />
		<option name="close_callback" value="invokeKrFunction('closeKolorAreaCallback_description')" type="string" />
		<option name="close_on_click" value="false" type="bool" />
		<option name="zorder" value="17" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
</ptplugin>

<action name="kolorAreaJsReady_description">
	set(ptplugin[description].jsready, true);

</action>


<action name="openKolorArea_description">
	ifnot(ptplugin[description].isOpen,
		if(ptplugin[description].doNotDeleteMe,
		set(ptplugin[description].currentCall, false);
		set(ptplugin[description].doNotDeleteMe, false);
		set(ptplugin[description].isOpen, true);
		
		js(showKolorArea(description, get(ptplugin[description].descID)));
		,
			set(ptplugin[description].currentCall, true);
			set(ptplugin[description].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,openKolorArea_description(););
		);
	);
</action>

<action name="closeKolorArea_description">
	if(ptplugin[description].isOpen,
		if(ptplugin[description].doNotDeleteMe,
			set(ptplugin[description].doNotDeleteMe, false);
		,
		js(invokePluginFunction(description, closeKolorArea));
		);
	);
</action>

<action name="toggleKolorArea_description">
	if(ptplugin[description].isOpen,
		closeKolorArea_description();
	,
		openKolorArea_description();
	);
</action>

<action name="closeKolorAreaCallback_description">
	set(ptplugin[description].doNotDeleteMe, false);
	set(ptplugin[description].isOpen, false);
</action>



<action name="showKolorArea_description">
	ifnot(ptplugin[description].startMethod == "",
		delayedcall(0,get(ptplugin[description].startMethod));
	,
		if(ptplugin[description].doNotDeleteMe,
			set(ptplugin[description].currentCall, false);
			set(ptplugin[description].doNotDeleteMe, false);
		set(ptplugin[description].isOpen, true);
		
		js(invokePluginFunction(description, showKolorArea, %1));
		,
			set(ptplugin[description].currentCall, true);
			set(ptplugin[description].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showKolorArea_description(%1););
		);
	);
</action>
	
<action name="hideKolorArea_description">
	if(ptplugin[description].doNotDeleteMe,
		set(ptplugin[description].doNotDeleteMe, false);
	,
	
	set(ptplugin[description].isOpen, false);
	js(invokePluginFunction(description, hideKolorArea, %1));
	);
</action>

<action name="openDescription_description">
	openKolorArea_description();
</action>

<action name="openSpotDescription_description">
	set(ptplugin[description].descID, %1);
	openKolorArea_description();
</action>

<action name="closeDescription_description">
	set(ptplugin[description].currentGroup, false);
	if(%1,
		set(restore_description, true);
	,
		set(restore_description, false);
	);
	closeKolorArea_description();
</action> 

<action name="showDescription_description">
	if(ptplugin[description].canStart,
		set(ptplugin[description].descID, get(projectdescriptionid));
		if(ptplugin[description].descID != "",
			openDescription_description();
		,
			hideKolorArea_description(false);
		);
		set(ptplugin[description].startMethod, "");
	);
</action>



<action name="changeLanguage_description">
	if(ptplugin[description].jsready,
		stopdelayedcall(delay_description);
		js(invokePluginFunction(description, changeLanguage, true));
	,
		delayedcall(delay_description, 0.1, changeLanguage_description(););
	);
</action>

<events name="kolorAreaEvents_description" 
	keep="true"
	onTourStart="set(ptplugin[description].canStart, true);if(ptplugin[description].openatstart,ifnot(ptplugin[description].startMethod == '',delayedcall(0,get(ptplugin[description].startMethod));););"
	onremovepano="if(ptplugin[description].isOpen,closeKolorArea_description(););"
	onremovedisplayedobject="ifnot(ptplugin[description].currentCall,if(ptplugin[description].isOpen,closeKolorArea_description();););"
	changetourlanguage="changeLanguage_description();"
/>

<!-- ********** -->
<!-- TEXT_SPOT_WHITE -->
<!-- id : description1 -->
<!-- ********** -->

<ptplugin name="description1" canStart="false" newPano="false" openatstart="false" mode="spot" startMethod="" engine="kolorArea">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="start_position" value="left" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="background_color" value="f2f2f2" type="string" />
		<option name="background_alpha" value="1" type="float" />
		<option name="topleft_radius" value="0" type="int" />
		<option name="topright_radius" value="0" type="int" />
		<option name="bottomleft_radius" value="0" type="int" />
		<option name="bottomright_radius" value="0" type="int" />
		<option name="area_border_width" value="0" type="int" />
		<option name="area_border_color" value="f2f2f2" type="string" />
		<option name="area_border_alpha" value="1" type="float" />
		<option name="padding" value="15" type="int" />
		<option name="display_title" value="true" type="bool" />
		<option name="title" value="description1description_title" type="string" />
		<option name="title_font" value="Verdana" type="string" />
		<option name="title_size" value="18" type="int" />
		<option name="title_weight" value="bold" type="string" />
		<option name="title_decoration" value="normal" type="string" />
		<option name="title_color" value="080808" type="string" />
		<option name="close_displayed" value="true" type="bool" />
		<option name="close_text" value="description1display_close_text" type="string" />

		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="area_width" value="600" type="int" />
		<option name="area_height" value="700" type="int" />
		<option name="area_width_unit" value="pixel" type="string" />
		<option name="area_height_unit" value="pixel" type="string" />
		<option name="animation" value="false" type="bool" />
		<option name="animation_duration" value="500" type="int" />
		<option name="refresh_content" value="true" type="bool" />
		<option name="close_callback" value="invokeKrFunction('closeKolorAreaCallback_description1')" type="string" />
		<option name="close_on_click" value="false" type="bool" />
		<option name="open_callback" value="invokeKrFunction('openKolorAreaCallback_description1')" type="string" />
		<option name="zorder" value="18" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
</ptplugin>

<action name="kolorAreaJsReady_description1">
	set(ptplugin[description1].jsready, true);

</action>

<action name="updateTitle_description1">
	js(invokePluginFunction(description1, changeTitle, description1description_title));
</action>

<action name="openKolorArea_description1">
	ifnot(ptplugin[description1].isOpen,
		set(ptplugin[description1].isOpen, true);
		
		js(showKolorArea(description1, get(ptplugin[description1].descID)));
		events.dispatch(onremovedisplayedobject);
	);
</action>

<action name="closeKolorArea_description1">
	if(ptplugin[description1].isOpen,
		js(invokePluginFunction(description1, closeKolorArea));
	);
</action>

<action name="toggleKolorArea_description1">
	if(ptplugin[description1].isOpen,
		closeKolorArea_description1();
	,
		openKolorArea_description1();
	);
</action>

<action name="closeKolorAreaCallback_description1">
	set(ptplugin[description1].isOpen, false);
	if(tour_displayinfo,hideTourInfo();

	);
</action>


<action name="openKolorAreaCallback_description1">
	updateTitle_description1();
</action>

<action name="showKolorArea_description1">
	ifnot(ptplugin[description1].startMethod == "",
		delayedcall(0,get(ptplugin[description1].startMethod));
	,
		set(ptplugin[description1].isOpen, true);
		
		js(invokePluginFunction(description1, showKolorArea, %1));
		events.dispatch(onremovedisplayedobject);
	);
</action>
	
<action name="hideKolorArea_description1">
	
	set(ptplugin[description1].isOpen, false);
	js(invokePluginFunction(description1, hideKolorArea, %1));
</action>

<action name="openDescription_description1">
	openKolorArea_description1();
</action>

<action name="openSpotDescription_description1">
	set(ptplugin[description1].descID, %1);
	openKolorArea_description1();
</action>

<action name="closeDescription_description1">
	set(ptplugin[description1].currentGroup, false);
	if(%1,
		set(restore_description1, true);
	,
		set(restore_description1, false);
	);
	closeKolorArea_description1();
</action> 

<action name="showDescription_description1">
	if(ptplugin[description1].canStart,
		if(ptplugin[description1].descID != "",
			openDescription_description1();
		,
			hideKolorArea_description1(false);
		);
		set(ptplugin[description1].startMethod, "");
	);
</action>



<action name="changeLanguage_description1">
	if(ptplugin[description1].jsready,
		stopdelayedcall(delay_description1);
		js(invokePluginFunction(description1, changeLanguage, true));
	,
		delayedcall(delay_description1, 0.1, changeLanguage_description1(););
	);
</action>

<events name="kolorAreaEvents_description1" 
	keep="true"
	onTourStart="set(ptplugin[description1].canStart, true);if(ptplugin[description1].openatstart,showTourInfo();
);"
	onhidetourinfo="if(ptplugin[description1].isOpen,closeDescription_description1(false););"
	onremovepano="if(ptplugin[description1].isOpen,hideTourInfo();
);"
	changetourlanguage="changeLanguage_description1();"
/>

<!-- ********** -->
<!-- Button -->
<!-- id : button -->
<!-- ********** -->

  <layer name="button"
         keep="true"
         url="%FIRSTXML%/graphics/button/infopdf.png"
         align="bottomleft"
         x="10"
         y="10"
         zorder="19"
         visible="false"
         onclick="buttonOnClick"
         tooltip="buttontooltip"
         onhover="showTooltip('plugin',buttonTooltipStyle);"
         onout="hideTooltip();"
         />



  <action name="buttonOnClick">
showDescription_description();



  </action>

  <events name="buttonevents"
    onTourStart="showbutton();"
    hidetourcontrols="hidebutton();"
    showtourcontrols="showbutton();"
    keep="true" />
  <action name="hidebutton">set(layer[button].visible, false);</action>
  <action name="showbutton">if(tour_displaycontrols,set(layer[button].visible, true);,hidebutton(););</action>

<layer name="buttonTooltipStyle"
  keep="true"
  enabled="false"
  capture="false"
  type="text"
  align="center"
  bg="true"
  bgcolor="0xffffff"
  bgalpha="1"
  bgborder="0"
  css="color:#000000;font-family:Arial;font-weight:bold;font-size:14px;text-align:left;"
  interactivecontent="false"
  zorder="0"
  padding="2"
  xoffset="0"
  yoffset="0"
  visible="false"
  html=""
  edge="bottom"
/>

<!-- ********** -->
<!-- TEXT_SPOT_GREEN -->
<!-- id : description2 -->
<!-- ********** -->

<ptplugin name="description2" canStart="false" newPano="false" openatstart="false" mode="spot" startMethod="" engine="kolorArea">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="start_position" value="left" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="background_color" value="f2f2f2" type="string" />
		<option name="background_alpha" value="1" type="float" />
		<option name="topleft_radius" value="0" type="int" />
		<option name="topright_radius" value="0" type="int" />
		<option name="bottomleft_radius" value="0" type="int" />
		<option name="bottomright_radius" value="0" type="int" />
		<option name="area_border_width" value="0" type="int" />
		<option name="area_border_color" value="f2f2f2" type="string" />
		<option name="area_border_alpha" value="1" type="float" />
		<option name="padding" value="15" type="int" />
		<option name="display_title" value="true" type="bool" />
		<option name="title" value="description2description_title" type="string" />
		<option name="title_font" value="Verdana" type="string" />
		<option name="title_size" value="18" type="int" />
		<option name="title_weight" value="bold" type="string" />
		<option name="title_decoration" value="normal" type="string" />
		<option name="title_color" value="080808" type="string" />
		<option name="close_displayed" value="true" type="bool" />
		<option name="close_text" value="description2display_close_text" type="string" />

		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="area_width" value="600" type="int" />
		<option name="area_height" value="700" type="int" />
		<option name="area_width_unit" value="pixel" type="string" />
		<option name="area_height_unit" value="pixel" type="string" />
		<option name="animation" value="false" type="bool" />
		<option name="animation_duration" value="500" type="int" />
		<option name="refresh_content" value="true" type="bool" />
		<option name="close_callback" value="invokeKrFunction('closeKolorAreaCallback_description2')" type="string" />
		<option name="close_on_click" value="false" type="bool" />
		<option name="open_callback" value="invokeKrFunction('openKolorAreaCallback_description2')" type="string" />
		<option name="zorder" value="20" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
</ptplugin>

<action name="kolorAreaJsReady_description2">
	set(ptplugin[description2].jsready, true);

</action>

<action name="updateTitle_description2">
	js(invokePluginFunction(description2, changeTitle, description2description_title));
</action>

<action name="openKolorArea_description2">
	ifnot(ptplugin[description2].isOpen,
		set(ptplugin[description2].isOpen, true);
		
		js(showKolorArea(description2, get(ptplugin[description2].descID)));
		events.dispatch(onremovedisplayedobject);
	);
</action>

<action name="closeKolorArea_description2">
	if(ptplugin[description2].isOpen,
		js(invokePluginFunction(description2, closeKolorArea));
	);
</action>

<action name="toggleKolorArea_description2">
	if(ptplugin[description2].isOpen,
		closeKolorArea_description2();
	,
		openKolorArea_description2();
	);
</action>

<action name="closeKolorAreaCallback_description2">
	set(ptplugin[description2].isOpen, false);
	if(tour_displayinfo,hideTourInfo();

	);
</action>


<action name="openKolorAreaCallback_description2">
	updateTitle_description2();
</action>

<action name="showKolorArea_description2">
	ifnot(ptplugin[description2].startMethod == "",
		delayedcall(0,get(ptplugin[description2].startMethod));
	,
		set(ptplugin[description2].isOpen, true);
		
		js(invokePluginFunction(description2, showKolorArea, %1));
		events.dispatch(onremovedisplayedobject);
	);
</action>
	
<action name="hideKolorArea_description2">
	
	set(ptplugin[description2].isOpen, false);
	js(invokePluginFunction(description2, hideKolorArea, %1));
</action>

<action name="openDescription_description2">
	openKolorArea_description2();
</action>

<action name="openSpotDescription_description2">
	set(ptplugin[description2].descID, %1);
	openKolorArea_description2();
</action>

<action name="closeDescription_description2">
	set(ptplugin[description2].currentGroup, false);
	if(%1,
		set(restore_description2, true);
	,
		set(restore_description2, false);
	);
	closeKolorArea_description2();
</action> 

<action name="showDescription_description2">
	if(ptplugin[description2].canStart,
		if(ptplugin[description2].descID != "",
			openDescription_description2();
		,
			hideKolorArea_description2(false);
		);
		set(ptplugin[description2].startMethod, "");
	);
</action>



<action name="changeLanguage_description2">
	if(ptplugin[description2].jsready,
		stopdelayedcall(delay_description2);
		js(invokePluginFunction(description2, changeLanguage, true));
	,
		delayedcall(delay_description2, 0.1, changeLanguage_description2(););
	);
</action>

<events name="kolorAreaEvents_description2" 
	keep="true"
	onTourStart="set(ptplugin[description2].canStart, true);if(ptplugin[description2].openatstart,showTourInfo();
);"
	onhidetourinfo="if(ptplugin[description2].isOpen,closeDescription_description2(false););"
	onremovepano="if(ptplugin[description2].isOpen,hideTourInfo();
);"
	changetourlanguage="changeLanguage_description2();"
/>

<!-- ********** -->
<!-- TEXT_SPOT_RED -->
<!-- id : description3 -->
<!-- ********** -->

<ptplugin name="description3" canStart="false" newPano="false" openatstart="false" mode="spot" startMethod="" engine="kolorArea">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="start_position" value="left" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="background_color" value="f2f2f2" type="string" />
		<option name="background_alpha" value="1" type="float" />
		<option name="topleft_radius" value="0" type="int" />
		<option name="topright_radius" value="0" type="int" />
		<option name="bottomleft_radius" value="0" type="int" />
		<option name="bottomright_radius" value="0" type="int" />
		<option name="area_border_width" value="0" type="int" />
		<option name="area_border_color" value="f2f2f2" type="string" />
		<option name="area_border_alpha" value="1" type="float" />
		<option name="padding" value="15" type="int" />
		<option name="display_title" value="true" type="bool" />
		<option name="title" value="description3description_title" type="string" />
		<option name="title_font" value="Verdana" type="string" />
		<option name="title_size" value="18" type="int" />
		<option name="title_weight" value="bold" type="string" />
		<option name="title_decoration" value="normal" type="string" />
		<option name="title_color" value="080808" type="string" />
		<option name="close_displayed" value="true" type="bool" />
		<option name="close_text" value="description3display_close_text" type="string" />

		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="area_width" value="600" type="int" />
		<option name="area_height" value="700" type="int" />
		<option name="area_width_unit" value="pixel" type="string" />
		<option name="area_height_unit" value="pixel" type="string" />
		<option name="animation" value="false" type="bool" />
		<option name="animation_duration" value="500" type="int" />
		<option name="refresh_content" value="true" type="bool" />
		<option name="close_callback" value="invokeKrFunction('closeKolorAreaCallback_description3')" type="string" />
		<option name="close_on_click" value="false" type="bool" />
		<option name="open_callback" value="invokeKrFunction('openKolorAreaCallback_description3')" type="string" />
		<option name="zorder" value="21" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
</ptplugin>

<action name="kolorAreaJsReady_description3">
	set(ptplugin[description3].jsready, true);

</action>

<action name="updateTitle_description3">
	js(invokePluginFunction(description3, changeTitle, description3description_title));
</action>

<action name="openKolorArea_description3">
	ifnot(ptplugin[description3].isOpen,
		set(ptplugin[description3].isOpen, true);
		
		js(showKolorArea(description3, get(ptplugin[description3].descID)));
		events.dispatch(onremovedisplayedobject);
	);
</action>

<action name="closeKolorArea_description3">
	if(ptplugin[description3].isOpen,
		js(invokePluginFunction(description3, closeKolorArea));
	);
</action>

<action name="toggleKolorArea_description3">
	if(ptplugin[description3].isOpen,
		closeKolorArea_description3();
	,
		openKolorArea_description3();
	);
</action>

<action name="closeKolorAreaCallback_description3">
	set(ptplugin[description3].isOpen, false);
	if(tour_displayinfo,hideTourInfo();

	);
</action>


<action name="openKolorAreaCallback_description3">
	updateTitle_description3();
</action>

<action name="showKolorArea_description3">
	ifnot(ptplugin[description3].startMethod == "",
		delayedcall(0,get(ptplugin[description3].startMethod));
	,
		set(ptplugin[description3].isOpen, true);
		
		js(invokePluginFunction(description3, showKolorArea, %1));
		events.dispatch(onremovedisplayedobject);
	);
</action>
	
<action name="hideKolorArea_description3">
	
	set(ptplugin[description3].isOpen, false);
	js(invokePluginFunction(description3, hideKolorArea, %1));
</action>

<action name="openDescription_description3">
	openKolorArea_description3();
</action>

<action name="openSpotDescription_description3">
	set(ptplugin[description3].descID, %1);
	openKolorArea_description3();
</action>

<action name="closeDescription_description3">
	set(ptplugin[description3].currentGroup, false);
	if(%1,
		set(restore_description3, true);
	,
		set(restore_description3, false);
	);
	closeKolorArea_description3();
</action> 

<action name="showDescription_description3">
	if(ptplugin[description3].canStart,
		if(ptplugin[description3].descID != "",
			openDescription_description3();
		,
			hideKolorArea_description3(false);
		);
		set(ptplugin[description3].startMethod, "");
	);
</action>



<action name="changeLanguage_description3">
	if(ptplugin[description3].jsready,
		stopdelayedcall(delay_description3);
		js(invokePluginFunction(description3, changeLanguage, true));
	,
		delayedcall(delay_description3, 0.1, changeLanguage_description3(););
	);
</action>

<events name="kolorAreaEvents_description3" 
	keep="true"
	onTourStart="set(ptplugin[description3].canStart, true);if(ptplugin[description3].openatstart,showTourInfo();
);"
	onhidetourinfo="if(ptplugin[description3].isOpen,closeDescription_description3(false););"
	onremovepano="if(ptplugin[description3].isOpen,hideTourInfo();
);"
	changetourlanguage="changeLanguage_description3();"
/>

<!-- ********** -->
<!-- master1 -->
<!-- id : gallery8 -->
<!-- ********** -->

<ptplugin name="gallery8" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="10" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="1" type="float" />
		<option name="container_topleft_border_radius" value="0" type="int" />
		<option name="container_topright_border_radius" value="0" type="int" />
		<option name="container_bottomleft_border_radius" value="0" type="int" />
		<option name="container_bottomright_border_radius" value="0" type="int" />
		<option name="container_border_width" value="6" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="false" type="bool" />
		
		<option name="caption_displayed" value="true" type="bool" />
		<option name="caption_position" value="left" type="string" />
		<option name="caption_font" value="Verdana" type="string" />
		<option name="caption_size" value="14" type="int" />
		<option name="caption_weight" value="normal" type="string" />
		<option name="caption_style" value="normal" type="string" />
		<option name="caption_decoration" value="none" type="string" />
		<option name="caption_color" value="000000" type="string" />
		<option name="caption_width" value="236" type="int" />
		<option name="caption_height" value="75" type="int" />
		<option name="caption_textalign" value="left" type="string" />
		
		<option name="play_displayed" value="false" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="gallery8play_text" type="string" />




		<option name="navigation_displayed" value="true" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="666666" type="string" />
		<option name="navprev_text" value="gallery8navprev_text" type="string" />
		<option name="navnext_text" value="gallery8navnext_text" type="string" />




		<option name="navigation_arrows" value="true" type="bool" />




		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="gallery8fullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="bottomright" type="string" />
		<option name="close_text" value="gallery8close_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery8')" type="string" />
		<option name="zorder" value="22" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallery8picture_title1" caption="gallery8picture_caption1" value="virtualtourdata/graphics/gallery8/_11_2_1.jpg"/>
		<item name="item_2" title="gallery8picture_title2" caption="gallery8picture_caption2" value="virtualtourdata/graphics/gallery8/_11_2.jpg"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery8">
	set(ptplugin[gallery8].jsready, true);
</action>

<action name="showGallery_gallery8">
	ifnot(ptplugin[gallery8].isOpen,
		if(ptplugin[gallery8].doNotDeleteMe,
			set(ptplugin[gallery8].currentCall, false);
		set(ptplugin[gallery8].isOpen, true);
		set(ptplugin[gallery8].doNotDeleteMe, false);
		set(gallery8_boxurl, %1);
		
		js(invokePluginFunction(gallery8, openKolorBox, %1));
		,
			set(ptplugin[gallery8].currentCall, true);
			set(ptplugin[gallery8].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showGallery_gallery8(%1););
		);
	,
		if(%1 !== null AND %1 != gallery8_boxurl,
			closeKolorBox_gallery8();
			delayedcall(0.3,showGallery_gallery8(%1););
		);
	);
</action>

<action name="toggleGallery_gallery8">
	js(invokePluginFunction(gallery8, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery8">
	if(ptplugin[gallery8].doNotDeleteMe,
		set(ptplugin[gallery8].doNotDeleteMe, false);
	,
	js(invokePluginFunction(gallery8, closeKolorBox));
	);
</action>

<action name="closeKolorBoxCallback_gallery8">
	
	set(ptplugin[gallery8].doNotDeleteMe, false);
	set(ptplugin[gallery8].isOpen, false);
</action>

<action name="changeLanguage_gallery8">
	if(ptplugin[gallery8].jsready,
		js(invokePluginFunction(gallery8, changeLanguage));
	,
		delayedcall(delay_gallery8, 0.1, changeLanguage_gallery8(););
	);
</action>

<events name="kolorBoxEvents_gallery8" 
	keep="true"
	onremovepano="if(ptplugin[gallery8].isOpen,closeKolorBox_gallery8(););"
	onremovedisplayedobject="ifnot(ptplugin[gallery8].currentCall,if(ptplugin[gallery8].isOpen,closeKolorBox_gallery8();););"
	changetourlanguage="changeLanguage_gallery8();"
	/>

<!-- ********** -->
<!-- master2 -->
<!-- id : gallery9 -->
<!-- ********** -->

<ptplugin name="gallery9" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="10" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="1" type="float" />
		<option name="container_topleft_border_radius" value="0" type="int" />
		<option name="container_topright_border_radius" value="0" type="int" />
		<option name="container_bottomleft_border_radius" value="0" type="int" />
		<option name="container_bottomright_border_radius" value="0" type="int" />
		<option name="container_border_width" value="6" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="false" type="bool" />
		
		<option name="caption_displayed" value="true" type="bool" />
		<option name="caption_position" value="left" type="string" />
		<option name="caption_font" value="Verdana" type="string" />
		<option name="caption_size" value="14" type="int" />
		<option name="caption_weight" value="normal" type="string" />
		<option name="caption_style" value="normal" type="string" />
		<option name="caption_decoration" value="none" type="string" />
		<option name="caption_color" value="000000" type="string" />
		<option name="caption_width" value="236" type="int" />
		<option name="caption_height" value="75" type="int" />
		<option name="caption_textalign" value="left" type="string" />
		
		<option name="play_displayed" value="false" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="gallery9play_text" type="string" />




		<option name="navigation_displayed" value="true" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="666666" type="string" />
		<option name="navprev_text" value="gallery9navprev_text" type="string" />
		<option name="navnext_text" value="gallery9navnext_text" type="string" />




		<option name="navigation_arrows" value="true" type="bool" />




		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="gallery9fullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="bottomright" type="string" />
		<option name="close_text" value="gallery9close_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery9')" type="string" />
		<option name="zorder" value="23" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallery9picture_title1" caption="gallery9picture_caption1" value="virtualtourdata/graphics/gallery9/_14_2_1.jpg"/>
		<item name="item_2" title="gallery9picture_title2" caption="gallery9picture_caption2" value="virtualtourdata/graphics/gallery9/_14_2.jpg"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery9">
	set(ptplugin[gallery9].jsready, true);
</action>

<action name="showGallery_gallery9">
	ifnot(ptplugin[gallery9].isOpen,
		if(ptplugin[gallery9].doNotDeleteMe,
			set(ptplugin[gallery9].currentCall, false);
		set(ptplugin[gallery9].isOpen, true);
		set(ptplugin[gallery9].doNotDeleteMe, false);
		set(gallery9_boxurl, %1);
		
		js(invokePluginFunction(gallery9, openKolorBox, %1));
		,
			set(ptplugin[gallery9].currentCall, true);
			set(ptplugin[gallery9].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showGallery_gallery9(%1););
		);
	,
		if(%1 !== null AND %1 != gallery9_boxurl,
			closeKolorBox_gallery9();
			delayedcall(0.3,showGallery_gallery9(%1););
		);
	);
</action>

<action name="toggleGallery_gallery9">
	js(invokePluginFunction(gallery9, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery9">
	if(ptplugin[gallery9].doNotDeleteMe,
		set(ptplugin[gallery9].doNotDeleteMe, false);
	,
	js(invokePluginFunction(gallery9, closeKolorBox));
	);
</action>

<action name="closeKolorBoxCallback_gallery9">
	
	set(ptplugin[gallery9].doNotDeleteMe, false);
	set(ptplugin[gallery9].isOpen, false);
</action>

<action name="changeLanguage_gallery9">
	if(ptplugin[gallery9].jsready,
		js(invokePluginFunction(gallery9, changeLanguage));
	,
		delayedcall(delay_gallery9, 0.1, changeLanguage_gallery9(););
	);
</action>

<events name="kolorBoxEvents_gallery9" 
	keep="true"
	onremovepano="if(ptplugin[gallery9].isOpen,closeKolorBox_gallery9(););"
	onremovedisplayedobject="ifnot(ptplugin[gallery9].currentCall,if(ptplugin[gallery9].isOpen,closeKolorBox_gallery9();););"
	changetourlanguage="changeLanguage_gallery9();"
	/>

<!-- ********** -->
<!-- master3 -->
<!-- id : gallery10 -->
<!-- ********** -->

<ptplugin name="gallery10" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="10" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="1" type="float" />
		<option name="container_topleft_border_radius" value="0" type="int" />
		<option name="container_topright_border_radius" value="0" type="int" />
		<option name="container_bottomleft_border_radius" value="0" type="int" />
		<option name="container_bottomright_border_radius" value="0" type="int" />
		<option name="container_border_width" value="6" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="false" type="bool" />
		
		<option name="caption_displayed" value="true" type="bool" />
		<option name="caption_position" value="left" type="string" />
		<option name="caption_font" value="Verdana" type="string" />
		<option name="caption_size" value="14" type="int" />
		<option name="caption_weight" value="normal" type="string" />
		<option name="caption_style" value="normal" type="string" />
		<option name="caption_decoration" value="none" type="string" />
		<option name="caption_color" value="000000" type="string" />
		<option name="caption_width" value="236" type="int" />
		<option name="caption_height" value="75" type="int" />
		<option name="caption_textalign" value="left" type="string" />
		
		<option name="play_displayed" value="false" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="gallery10play_text" type="string" />




		<option name="navigation_displayed" value="true" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="666666" type="string" />
		<option name="navprev_text" value="gallery10navprev_text" type="string" />
		<option name="navnext_text" value="gallery10navnext_text" type="string" />




		<option name="navigation_arrows" value="true" type="bool" />




		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="gallery10fullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="bottomright" type="string" />
		<option name="close_text" value="gallery10close_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery10')" type="string" />
		<option name="zorder" value="24" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallery10picture_title2" caption="gallery10picture_caption2" value="virtualtourdata/graphics/gallery10/_15_4_1.jpg"/>
		<item name="item_2" title="gallery10picture_title1" caption="gallery10picture_caption1" value="virtualtourdata/graphics/gallery10/_15_4.jpg"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery10">
	set(ptplugin[gallery10].jsready, true);
</action>

<action name="showGallery_gallery10">
	ifnot(ptplugin[gallery10].isOpen,
		if(ptplugin[gallery10].doNotDeleteMe,
			set(ptplugin[gallery10].currentCall, false);
		set(ptplugin[gallery10].isOpen, true);
		set(ptplugin[gallery10].doNotDeleteMe, false);
		set(gallery10_boxurl, %1);
		
		js(invokePluginFunction(gallery10, openKolorBox, %1));
		,
			set(ptplugin[gallery10].currentCall, true);
			set(ptplugin[gallery10].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showGallery_gallery10(%1););
		);
	,
		if(%1 !== null AND %1 != gallery10_boxurl,
			closeKolorBox_gallery10();
			delayedcall(0.3,showGallery_gallery10(%1););
		);
	);
</action>

<action name="toggleGallery_gallery10">
	js(invokePluginFunction(gallery10, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery10">
	if(ptplugin[gallery10].doNotDeleteMe,
		set(ptplugin[gallery10].doNotDeleteMe, false);
	,
	js(invokePluginFunction(gallery10, closeKolorBox));
	);
</action>

<action name="closeKolorBoxCallback_gallery10">
	
	set(ptplugin[gallery10].doNotDeleteMe, false);
	set(ptplugin[gallery10].isOpen, false);
</action>

<action name="changeLanguage_gallery10">
	if(ptplugin[gallery10].jsready,
		js(invokePluginFunction(gallery10, changeLanguage));
	,
		delayedcall(delay_gallery10, 0.1, changeLanguage_gallery10(););
	);
</action>

<events name="kolorBoxEvents_gallery10" 
	keep="true"
	onremovepano="if(ptplugin[gallery10].isOpen,closeKolorBox_gallery10(););"
	onremovedisplayedobject="ifnot(ptplugin[gallery10].currentCall,if(ptplugin[gallery10].isOpen,closeKolorBox_gallery10();););"
	changetourlanguage="changeLanguage_gallery10();"
	/>

<!-- ********** -->
<!-- master4 -->
<!-- id : gallery11 -->
<!-- ********** -->

<ptplugin name="gallery11" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="10" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="1" type="float" />
		<option name="container_topleft_border_radius" value="0" type="int" />
		<option name="container_topright_border_radius" value="0" type="int" />
		<option name="container_bottomleft_border_radius" value="0" type="int" />
		<option name="container_bottomright_border_radius" value="0" type="int" />
		<option name="container_border_width" value="6" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="false" type="bool" />
		
		<option name="caption_displayed" value="true" type="bool" />
		<option name="caption_position" value="left" type="string" />
		<option name="caption_font" value="Verdana" type="string" />
		<option name="caption_size" value="14" type="int" />
		<option name="caption_weight" value="normal" type="string" />
		<option name="caption_style" value="normal" type="string" />
		<option name="caption_decoration" value="none" type="string" />
		<option name="caption_color" value="000000" type="string" />
		<option name="caption_width" value="236" type="int" />
		<option name="caption_height" value="75" type="int" />
		<option name="caption_textalign" value="left" type="string" />
		
		<option name="play_displayed" value="false" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="gallery11play_text" type="string" />




		<option name="navigation_displayed" value="true" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="666666" type="string" />
		<option name="navprev_text" value="gallery11navprev_text" type="string" />
		<option name="navnext_text" value="gallery11navnext_text" type="string" />




		<option name="navigation_arrows" value="true" type="bool" />




		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="gallery11fullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="bottomright" type="string" />
		<option name="close_text" value="gallery11close_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery11')" type="string" />
		<option name="zorder" value="25" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallery11picture_title1" caption="gallery11picture_caption1" value="virtualtourdata/graphics/gallery11/_15_3_1.jpg"/>
		<item name="item_2" title="gallery11picture_title2" caption="gallery11picture_caption2" value="virtualtourdata/graphics/gallery11/_15_3.jpg"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery11">
	set(ptplugin[gallery11].jsready, true);
</action>

<action name="showGallery_gallery11">
	ifnot(ptplugin[gallery11].isOpen,
		if(ptplugin[gallery11].doNotDeleteMe,
			set(ptplugin[gallery11].currentCall, false);
		set(ptplugin[gallery11].isOpen, true);
		set(ptplugin[gallery11].doNotDeleteMe, false);
		set(gallery11_boxurl, %1);
		
		js(invokePluginFunction(gallery11, openKolorBox, %1));
		,
			set(ptplugin[gallery11].currentCall, true);
			set(ptplugin[gallery11].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showGallery_gallery11(%1););
		);
	,
		if(%1 !== null AND %1 != gallery11_boxurl,
			closeKolorBox_gallery11();
			delayedcall(0.3,showGallery_gallery11(%1););
		);
	);
</action>

<action name="toggleGallery_gallery11">
	js(invokePluginFunction(gallery11, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery11">
	if(ptplugin[gallery11].doNotDeleteMe,
		set(ptplugin[gallery11].doNotDeleteMe, false);
	,
	js(invokePluginFunction(gallery11, closeKolorBox));
	);
</action>

<action name="closeKolorBoxCallback_gallery11">
	
	set(ptplugin[gallery11].doNotDeleteMe, false);
	set(ptplugin[gallery11].isOpen, false);
</action>

<action name="changeLanguage_gallery11">
	if(ptplugin[gallery11].jsready,
		js(invokePluginFunction(gallery11, changeLanguage));
	,
		delayedcall(delay_gallery11, 0.1, changeLanguage_gallery11(););
	);
</action>

<events name="kolorBoxEvents_gallery11" 
	keep="true"
	onremovepano="if(ptplugin[gallery11].isOpen,closeKolorBox_gallery11(););"
	onremovedisplayedobject="ifnot(ptplugin[gallery11].currentCall,if(ptplugin[gallery11].isOpen,closeKolorBox_gallery11();););"
	changetourlanguage="changeLanguage_gallery11();"
	/>

<!-- ********** -->
<!-- PDF Box -->
<!-- id : PdfViewer -->
<!-- ********** -->

<ptplugin name="PdfViewer" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="10" type="int" />
		<option name="draggable_box" value="true" type="bool" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="1" type="float" />
		<option name="container_topleft_border_radius" value="0" type="int" />
		<option name="container_topright_border_radius" value="0" type="int" />
		<option name="container_bottomleft_border_radius" value="0" type="int" />
		<option name="container_bottomright_border_radius" value="0" type="int" />
		<option name="container_border_width" value="6" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="title_displayed" value="false" type="bool" />
		<option name="title_position" value="top" type="string" />
		<option name="title_font" value="Verdana" type="string" />
		<option name="title_size" value="14" type="int" />
		<option name="title_weight" value="normal" type="string" />
		<option name="title_style" value="normal" type="string" />
		<option name="title_decoration" value="none" type="string" />
		<option name="title_color" value="000000" type="string" />
		<option name="caption_displayed" value="false" type="bool" />
		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="PdfViewerfullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="PdfViewerclose_text" type="string" />

		<option name="iframe_default_width" value="600" type="int" />
		<option name="iframe_default_height" value="840" type="int" />
		<option name="iframe_devices_width" value="1024" type="int" />
		<option name="iframe_devices_height" value="5000" type="int" />
		<option name="force_ios_scrolling" value="true" type="bool" />
		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_PdfViewer')" type="string" />
		<option name="zorder" value="26" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_PdfViewer">
	set(ptplugin[PdfViewer].jsready, true);
</action>

<action name="openPDF_PdfViewer">
	ifnot(ptplugin[PdfViewer].isOpen,
		set(ptplugin[PdfViewer].isOpen, true);
		set(ptplugin[PdfViewer].doNotDeleteMe, false);
		set(PdfViewer_boxurl, %1);
		pauseautorotation(forceplugin);

		js(invokePluginFunction(PdfViewer, loadSingleArrayItem, %1?iframe=true, %2));
		events.dispatch(onremovedisplayedobject);
	,
		if('%1' != PdfViewer_boxurl,
			closeKolorBox_PdfViewer();
			delayedcall(0.3,openPDF_PdfViewer(%1,%2););
		);
	);
</action>

<action name="togglePDF_PdfViewer">
	js(invokePluginFunction(PdfViewer, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_PdfViewer">
	js(invokePluginFunction(PdfViewer, closeKolorBox));
</action>

<action name="closeKolorBoxCallback_PdfViewer">
	resumeautorotation(forceplugin);

	set(ptplugin[PdfViewer].isOpen, false);
</action>

<action name="changeLanguage_PdfViewer">
	if(ptplugin[PdfViewer].jsready,
		stopdelayedcall(delay_PdfViewer);
		js(invokePluginFunction(PdfViewer, changeLanguage));
	,
		delayedcall(delay_PdfViewer, 0.1, changeLanguage_PdfViewer(););
	);
</action>

<events name="kolorBoxEvents_PdfViewer" 
	keep="true"
	changetourlanguage="changeLanguage_PdfViewer();"
	/>

<!-- ********** -->
<!-- Колофон -->
<!-- id : description4 -->
<!-- ********** -->

<ptplugin name="description4" canStart="false" newPano="false" openatstart="false" mode="panorama" startMethod="showDescription_description4" engine="kolorArea">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="start_position" value="left" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="background_color" value="f2f2f2" type="string" />
		<option name="background_alpha" value="1" type="float" />
		<option name="topleft_radius" value="0" type="int" />
		<option name="topright_radius" value="0" type="int" />
		<option name="bottomleft_radius" value="0" type="int" />
		<option name="bottomright_radius" value="0" type="int" />
		<option name="area_border_width" value="0" type="int" />
		<option name="area_border_color" value="f2f2f2" type="string" />
		<option name="area_border_alpha" value="1" type="float" />
		<option name="padding" value="15" type="int" />
		<option name="display_title" value="false" type="bool" />
		<option name="close_displayed" value="true" type="bool" />
		<option name="close_text" value="description4display_close_text" type="string" />

		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="area_width" value="600" type="int" />
		<option name="area_height" value="700" type="int" />
		<option name="area_width_unit" value="pixel" type="string" />
		<option name="area_height_unit" value="pixel" type="string" />
		<option name="animation" value="false" type="bool" />
		<option name="animation_duration" value="500" type="int" />
		<option name="refresh_content" value="true" type="bool" />
		<option name="close_callback" value="invokeKrFunction('closeKolorAreaCallback_description4')" type="string" />
		<option name="close_on_click" value="false" type="bool" />
		<option name="zorder" value="27" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
</ptplugin>

<action name="kolorAreaJsReady_description4">
	set(ptplugin[description4].jsready, true);

</action>


<action name="openKolorArea_description4">
	ifnot(ptplugin[description4].isOpen,
		if(ptplugin[description4].doNotDeleteMe,
		set(ptplugin[description4].currentCall, false);
		set(ptplugin[description4].doNotDeleteMe, false);
		set(ptplugin[description4].isOpen, true);
		
		js(showKolorArea(description4, get(ptplugin[description4].descID)));
		,
			set(ptplugin[description4].currentCall, true);
			set(ptplugin[description4].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,openKolorArea_description4(););
		);
	);
</action>

<action name="closeKolorArea_description4">
	if(ptplugin[description4].isOpen,
		if(ptplugin[description4].doNotDeleteMe,
			set(ptplugin[description4].doNotDeleteMe, false);
		,
		js(invokePluginFunction(description4, closeKolorArea));
		);
	);
</action>

<action name="toggleKolorArea_description4">
	if(ptplugin[description4].isOpen,
		closeKolorArea_description4();
	,
		openKolorArea_description4();
	);
</action>

<action name="closeKolorAreaCallback_description4">
	set(ptplugin[description4].doNotDeleteMe, false);
	set(ptplugin[description4].isOpen, false);
	if(tour_displayinfo,hideTourInfo();

	);
</action>



<action name="showKolorArea_description4">
	ifnot(ptplugin[description4].startMethod == "",
		delayedcall(0,get(ptplugin[description4].startMethod));
	,
		if(ptplugin[description4].doNotDeleteMe,
			set(ptplugin[description4].currentCall, false);
			set(ptplugin[description4].doNotDeleteMe, false);
		set(ptplugin[description4].isOpen, true);
		
		js(invokePluginFunction(description4, showKolorArea, %1));
		,
			set(ptplugin[description4].currentCall, true);
			set(ptplugin[description4].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showKolorArea_description4(%1););
		);
	);
</action>
	
<action name="hideKolorArea_description4">
	if(ptplugin[description4].doNotDeleteMe,
		set(ptplugin[description4].doNotDeleteMe, false);
	,
	
	set(ptplugin[description4].isOpen, false);
	js(invokePluginFunction(description4, hideKolorArea, %1));
	);
</action>

<action name="openDescription_description4">
	openKolorArea_description4();
</action>

<action name="openSpotDescription_description4">
	set(ptplugin[description4].descID, %1);
	openKolorArea_description4();
</action>

<action name="closeDescription_description4">
	set(ptplugin[description4].currentGroup, false);
	if(%1,
		set(restore_description4, true);
	,
		set(restore_description4, false);
	);
	closeKolorArea_description4();
</action> 

<action name="showDescription_description4">
	if(ptplugin[description4].canStart,
		set(ptplugin[description4].descID, get(scene[get(xml.scene)].descriptionid));
		if(ptplugin[description4].descID == null,
			set(ptplugin[description4].descID, "");
		);
		if(ptplugin[description4].descID != "",
			openDescription_description4();
		,
			hideKolorArea_description4(false);
		);
		set(ptplugin[description4].startMethod, "");
	);
</action>


<action name="refreshPanoDescription_description4">
	set(ptplugin[description4].descID, get(scene[get(xml.scene)].descriptionid));
	if(ptplugin[description4].descID == null,
		set(ptplugin[description4].descID, "");
	);
	if(ptplugin[description4].descID != "",
		if(ptplugin[description4].isOpen,
			js(invokePluginFunction(description4, updateKolorArea, get(ptplugin[description4].descID)));
		,
			if(restore_description4,
				showDescription_description4();
			);
		);
	,
		if(tour_displayinfo,
			delayedcall(0.1,showTourInfo();
);
		);
		closeDescription_description4(get(ptplugin[description4].isOpen));
	);
</action>

<action name="onNewPano_description4">
	if(ptplugin[description4].newPano,
		if(ptplugin[description4].startMethod == "",
			if(ptplugin[description4].isOpen,
				refreshPanoDescription_description4();
			,
				if(tour_displaycontrols,
				if(tour_displayinfo,
				showDescription_description4();
				,
				refreshPanoDescription_description4();
				);
				);
			);
		);
	);
	set(ptplugin[description4].newPano, true);
</action>

<action name="changeLanguage_description4">
	if(ptplugin[description4].jsready,
		stopdelayedcall(delay_description4);
		js(invokePluginFunction(description4, changeLanguage, true));
	,
		delayedcall(delay_description4, 0.1, changeLanguage_description4(););
	);
</action>

<events name="kolorAreaEvents_description4" 
	keep="true"
	onTourStart="set(ptplugin[description4].canStart, true);if(ptplugin[description4].openatstart,if(tour_displaycontrols,showTourInfo();
););"
	onshowtourinfo="if(tour_displayinfo,showDescription_description4(););"
	onhidetourinfo="delayedcall(0.3,if(ptplugin[description4].isOpen,closeDescription_description4(false);););"
	onremovepano="if(ptplugin[description4].isOpen,hideTourInfo();
);"
	onremovedisplayedobject="ifnot(ptplugin[description4].currentCall,if(ptplugin[description4].isOpen,hideTourInfo();
););"
	hidetourcontrols="if(ptplugin[description4].isOpen,hideKolorArea_description4(false););"
	showtourcontrols="if(tour_displayinfo,if(ptplugin[description4].isOpen,showKolorArea_description4(false);,showDescription_description4();););"
	changetourlanguage="changeLanguage_description4();"
/>

<!-- ********** -->
<!-- master5 -->
<!-- id : gallery12 -->
<!-- ********** -->

<ptplugin name="gallery12" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="10" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="1" type="float" />
		<option name="container_topleft_border_radius" value="0" type="int" />
		<option name="container_topright_border_radius" value="0" type="int" />
		<option name="container_bottomleft_border_radius" value="0" type="int" />
		<option name="container_bottomright_border_radius" value="0" type="int" />
		<option name="container_border_width" value="6" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="false" type="bool" />
		
		<option name="caption_displayed" value="true" type="bool" />
		<option name="caption_position" value="left" type="string" />
		<option name="caption_font" value="Verdana" type="string" />
		<option name="caption_size" value="14" type="int" />
		<option name="caption_weight" value="normal" type="string" />
		<option name="caption_style" value="normal" type="string" />
		<option name="caption_decoration" value="none" type="string" />
		<option name="caption_color" value="000000" type="string" />
		<option name="caption_width" value="236" type="int" />
		<option name="caption_height" value="75" type="int" />
		<option name="caption_textalign" value="left" type="string" />
		
		<option name="play_displayed" value="false" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="gallery12play_text" type="string" />




		<option name="navigation_displayed" value="true" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="666666" type="string" />
		<option name="navprev_text" value="gallery12navprev_text" type="string" />
		<option name="navnext_text" value="gallery12navnext_text" type="string" />




		<option name="navigation_arrows" value="true" type="bool" />




		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="gallery12fullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="bottomright" type="string" />
		<option name="close_text" value="gallery12close_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery12')" type="string" />
		<option name="zorder" value="28" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallery12picture_title2" caption="gallery12picture_caption2" value="virtualtourdata/graphics/gallery12/_4_3.jpg"/>
		<item name="item_2" title="gallery12picture_title3" caption="gallery12picture_caption3" value="virtualtourdata/graphics/gallery12/_4_3_1.jpg"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery12">
	set(ptplugin[gallery12].jsready, true);
</action>

<action name="showGallery_gallery12">
	ifnot(ptplugin[gallery12].isOpen,
		if(ptplugin[gallery12].doNotDeleteMe,
			set(ptplugin[gallery12].currentCall, false);
		set(ptplugin[gallery12].isOpen, true);
		set(ptplugin[gallery12].doNotDeleteMe, false);
		set(gallery12_boxurl, %1);
		
		js(invokePluginFunction(gallery12, openKolorBox, %1));
		,
			set(ptplugin[gallery12].currentCall, true);
			set(ptplugin[gallery12].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showGallery_gallery12(%1););
		);
	,
		if(%1 !== null AND %1 != gallery12_boxurl,
			closeKolorBox_gallery12();
			delayedcall(0.3,showGallery_gallery12(%1););
		);
	);
</action>

<action name="toggleGallery_gallery12">
	js(invokePluginFunction(gallery12, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery12">
	if(ptplugin[gallery12].doNotDeleteMe,
		set(ptplugin[gallery12].doNotDeleteMe, false);
	,
	js(invokePluginFunction(gallery12, closeKolorBox));
	);
</action>

<action name="closeKolorBoxCallback_gallery12">
	
	set(ptplugin[gallery12].doNotDeleteMe, false);
	set(ptplugin[gallery12].isOpen, false);
</action>

<action name="changeLanguage_gallery12">
	if(ptplugin[gallery12].jsready,
		js(invokePluginFunction(gallery12, changeLanguage));
	,
		delayedcall(delay_gallery12, 0.1, changeLanguage_gallery12(););
	);
</action>

<events name="kolorBoxEvents_gallery12" 
	keep="true"
	onremovepano="if(ptplugin[gallery12].isOpen,closeKolorBox_gallery12(););"
	onremovedisplayedobject="ifnot(ptplugin[gallery12].currentCall,if(ptplugin[gallery12].isOpen,closeKolorBox_gallery12();););"
	changetourlanguage="changeLanguage_gallery12();"
	/>

<!-- ********** -->
<!-- Force Landscape on Mobile -->
<!-- id : ForceLandscapeMobilePlugin -->
<!-- ********** -->

	<events name="mobileorientation_events" devices="mobile" keep="true" onresize="mobileorientation_portrait_mode_check();"/>

	<action name="mobileorientation_portrait_mode_check" device="mobile">
		div(aspect, stagewidth, stageheight);
		if(aspect != lastaspect OR '%1' == 'true',
			copy(lastaspect, aspect);
			if(stagewidth GT stageheight,
				tween(layer[mobileorientation_rotate_device_required].alpha, 0.0, 0.0);
			,
				tween(layer[mobileorientation_rotate_device_required].alpha, 1.0);
				delayedcall(3.0, tween(layer[mobileorientation_rotate_device_required].alpha, 0.0, 1.0););
			);
		);
	</action>	

	<layer name="mobileorientation_rotate_device_required" keep="true" devices="mobile" 
		url="%FIRSTXML%/graphics/rotate_device.png" width="80%" height="prop"
		align="center" edge="center"
		autoalpha="true" alpha="0.0"
		enabled="false"
		/>	
<!-- ********** -->
<!-- TEXT -->
<!-- id : description5 -->
<!-- ********** -->

<ptplugin name="description5" canStart="false" newPano="false" openatstart="false" mode="spot" startMethod="" engine="kolorArea">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="start_position" value="left" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="background_color" value="f2f2f2" type="string" />
		<option name="background_alpha" value="1" type="float" />
		<option name="topleft_radius" value="0" type="int" />
		<option name="topright_radius" value="0" type="int" />
		<option name="bottomleft_radius" value="0" type="int" />
		<option name="bottomright_radius" value="0" type="int" />
		<option name="area_border_width" value="0" type="int" />
		<option name="area_border_color" value="f2f2f2" type="string" />
		<option name="area_border_alpha" value="1" type="float" />
		<option name="padding" value="15" type="int" />
		<option name="display_title" value="false" type="bool" />
		<option name="close_displayed" value="true" type="bool" />
		<option name="close_text" value="description5display_close_text" type="string" />

		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.40000000000000002" type="float" />

		<option name="area_width" value="600" type="int" />
		<option name="area_height" value="700" type="int" />
		<option name="area_width_unit" value="pixel" type="string" />
		<option name="area_height_unit" value="pixel" type="string" />
		<option name="animation" value="false" type="bool" />
		<option name="animation_duration" value="500" type="int" />
		<option name="refresh_content" value="true" type="bool" />
		<option name="close_callback" value="invokeKrFunction('closeKolorAreaCallback_description5')" type="string" />
		<option name="close_on_click" value="false" type="bool" />
		<option name="zorder" value="30" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
</ptplugin>

<action name="kolorAreaJsReady_description5">
	set(ptplugin[description5].jsready, true);

</action>


<action name="openKolorArea_description5">
	ifnot(ptplugin[description5].isOpen,
		if(ptplugin[description5].doNotDeleteMe,
		set(ptplugin[description5].currentCall, false);
		set(ptplugin[description5].doNotDeleteMe, false);
		set(ptplugin[description5].isOpen, true);
		
		js(showKolorArea(description5, get(ptplugin[description5].descID)));
		,
			set(ptplugin[description5].currentCall, true);
			set(ptplugin[description5].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,openKolorArea_description5(););
		);
	);
</action>

<action name="closeKolorArea_description5">
	if(ptplugin[description5].isOpen,
		if(ptplugin[description5].doNotDeleteMe,
			set(ptplugin[description5].doNotDeleteMe, false);
		,
		js(invokePluginFunction(description5, closeKolorArea));
		);
	);
</action>

<action name="toggleKolorArea_description5">
	if(ptplugin[description5].isOpen,
		closeKolorArea_description5();
	,
		openKolorArea_description5();
	);
</action>

<action name="closeKolorAreaCallback_description5">
	set(ptplugin[description5].doNotDeleteMe, false);
	set(ptplugin[description5].isOpen, false);
</action>



<action name="showKolorArea_description5">
	ifnot(ptplugin[description5].startMethod == "",
		delayedcall(0,get(ptplugin[description5].startMethod));
	,
		if(ptplugin[description5].doNotDeleteMe,
			set(ptplugin[description5].currentCall, false);
			set(ptplugin[description5].doNotDeleteMe, false);
		set(ptplugin[description5].isOpen, true);
		
		js(invokePluginFunction(description5, showKolorArea, %1));
		,
			set(ptplugin[description5].currentCall, true);
			set(ptplugin[description5].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showKolorArea_description5(%1););
		);
	);
</action>
	
<action name="hideKolorArea_description5">
	if(ptplugin[description5].doNotDeleteMe,
		set(ptplugin[description5].doNotDeleteMe, false);
	,
	
	set(ptplugin[description5].isOpen, false);
	js(invokePluginFunction(description5, hideKolorArea, %1));
	);
</action>

<action name="openDescription_description5">
	openKolorArea_description5();
</action>

<action name="openSpotDescription_description5">
	set(ptplugin[description5].descID, %1);
	openKolorArea_description5();
</action>

<action name="closeDescription_description5">
	set(ptplugin[description5].currentGroup, false);
	if(%1,
		set(restore_description5, true);
	,
		set(restore_description5, false);
	);
	closeKolorArea_description5();
</action> 

<action name="showDescription_description5">
	if(ptplugin[description5].canStart,
		if(ptplugin[description5].descID != "",
			openDescription_description5();
		,
			hideKolorArea_description5(false);
		);
		set(ptplugin[description5].startMethod, "");
	);
</action>



<action name="changeLanguage_description5">
	if(ptplugin[description5].jsready,
		stopdelayedcall(delay_description5);
		js(invokePluginFunction(description5, changeLanguage, true));
	,
		delayedcall(delay_description5, 0.1, changeLanguage_description5(););
	);
</action>

<events name="kolorAreaEvents_description5" 
	keep="true"
	onTourStart="set(ptplugin[description5].canStart, true);if(ptplugin[description5].openatstart,ifnot(ptplugin[description5].startMethod == '',delayedcall(0,get(ptplugin[description5].startMethod));););"
	onremovepano="if(ptplugin[description5].isOpen,closeKolorArea_description5(););"
	onremovedisplayedobject="ifnot(ptplugin[description5].currentCall,if(ptplugin[description5].isOpen,closeKolorArea_description5();););"
	changetourlanguage="changeLanguage_description5();"
/>

<action name="viewControlZoomIn">
	if(%1,
		if(%2,
			if(%2 LT view.fovmin,
				zoomto(get(view.fovmin));
			,
				if(%2 LT view.fov,
					zoomto(%2);
				);
			);
		,
			set(fov_moveforce, -1);
			delayedcall(0.1, viewControlZoomStop());
		);
	,
		set(fov_moveforce, -1);
	);
</action>
<action name="viewControlZoomOut">
	if(%1,
		if(%2,
			if(%2 GT view.fovmax,
				zoomto(get(view.fovmax));
			,
				if(%2 GT view.fov,
					zoomto(%2);
				);
			);
		,
			set(fov_moveforce, +1);
			delayedcall(0.1, viewControlZoomStop());
		);
	,
		set(fov_moveforce, +1);
	);
</action>
<action name="viewControlZoomStop">
	set(fov_moveforce, 0);
</action>

  <!-- FLOORPLAN -->
  <action name="hideFloorplan">set(tour_displayfloorplan, false);events.dispatch(onhidetourfloorplan);</action>
  <action name="showFloorplan">set(tour_displayfloorplan, true); events.dispatch(onshowtourfloorplan);</action>


  <!-- Tour Information -->
  <action name="hideTourInfo">set(tour_displayinfo, false);events.dispatch(onhidetourinfo);</action>
  <action name="showTourInfo">set(tour_displayinfo, true); events.dispatch(onshowtourinfo);</action>


<action name="setViewArchitectural">
	if(normalViewActivated,stopSetViewTweens(););
	if(current_view_isflat === true,
		setViewNonFlat(VFOV);
	);
	setViewArchitecturalComplete();
</action>

<action name="setViewArchitecturalComplete">
	set(view.fovmax, get(panoview.fovmax));
	set(view.fisheyefovlink, 0.5);
	tween(view.architectural, 1.0, distance(1.0, 0.45));
	tween(view.pannini, 0.0, distance(1.0, 0.45), easeOutQuad, if(panniniViewActivated,restoreViewFromPannini();););
	tween(view.fisheye, 0.0, distance(1.0, 0.45), easeOutQuad, 
		set(view.stereographic,false);
		tween(view.vlookat, get(panoview.v), distance(90, 0.45));
	);
	tween(view.fov, get(panoview.fov), distance(50, 0.45));
</action>

  <!-- Hide / Show Controls -->
  <action name="hideTourControls">set(tour_displaycontrols, false);events.dispatch(hidetourcontrols);</action>
  <action name="showTourControls">set(tour_displaycontrols, true); events.dispatch(showtourcontrols);</action>


  <!-- Fullscreen Management -->
  <action name="exitFullScreen" devices="fullscreensupport">set(tour_fullscreen,false);js(setFullscreen(false));</action>
  <action name="enterFullScreen" devices="fullscreensupport">set(tour_fullscreen,true);js(setFullscreen(true));</action>
  <action name="switchFullScreen">if(tour_fullscreen,exitFullScreen();,enterFullScreen(););</action>

  
  <events name="krpanoExitFullscreenEvent"
    onexitfullscreen="if(tour_fullscreen,exitFullScreenChangeEvent(););"
    keep="true" />

  <action name="exitFullScreenChangeEvent" devices="fullscreensupport">set(tour_fullscreen,false);events.dispatch(onexitfullscreen);</action>
  <action name="enterFullScreenChangeEvent" devices="fullscreensupport">set(tour_fullscreen,true);events.dispatch(onenterfullscreen);</action>
  <action name="exitFullScreenFallback">set(fullscreen,false);</action>
  <action name="enterFullScreenFallback">set(fullscreen,true);</action>
  
  <action name="resizeFullScreenEvent">delayedcall(0,updatescreen(););</action>

<action name="setViewNormal">
	stopSetViewTweens();
	if(current_view_isflat === true,
		setViewNonFlat(VFOV);
	);
	setViewNormalComplete();
</action>

<action name="setViewNormalComplete">
	set(view.fisheyefovlink, 0.5);
	set(view.fovmax, get(panoview.fovmax));
	tween(view.architectural, 0.0, distance(1.0, 0.45));
	tween(view.pannini, 0.0, distance(1.0, 0.45), easeOutQuad, if(panniniViewActivated,restoreViewFromPannini();););
	tween(view.vlookat, get(panoview.v), distance(90, 0.45));
	tween(view.fov, get(panoview.fov), distance(50, 0.45));
	tween(view.fisheye, 0.0, distance(1.0, 0.45),
		set(view.stereographic,false);
	);
</action>

<krpano normalViewActivated="true" />
<action name="stopSetViewTweens">
	stoptween(view.fov);
	stoptween(view.vlookat);
	stoptween(view.fisheye);
	stoptween(view.architectural);
	stoptween(view.pannini);
</action>

  <!-- Share Tour -->
  <action name="shareTour">events.dispatch(onsharetour);</action>

</krpano>